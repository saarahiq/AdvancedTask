{
	"info": {
		"_postman_id": "74dba416-150b-4e8e-9c47-00c71dd75e01",
		"name": "Mars API",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "30171885"
	},
	"item": [
		{
			"name": "User endpoints",
			"item": [
				{
					"name": "SignUp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successfully Registered New User\", function () {\r",
									"    var response = pm.response.json();\r",
									"     pm.expect(response.isSuccess).to.be.true;\r",
									"});\r",
									"\r",
									"pm.test(\"Registration Unsuccessful\", function () {\r",
									"    var response = pm.response.json();\r",
									"     pm.expect(response.isSuccess).to.be.false;\r",
									"     pm.expect(response.message).to.equal(\"Register error - Email address has been used in registration.\");\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Validate Null Parameters\", function () {\r",
									"    var response = pm.response.json();\r",
									"     pm.expect(response.isSuccess).to.be.false;\r",
									"     pm.expect(response.message).to.equal(\"Parameter can not be null\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"andrew@live.com\",\r\n  \"firstName\": \"Andrew\",\r\n  \"lastName\": \"Brown\",\r\n  \"password\": \"Password1\",\r\n  \"terms\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:60968/authentication/authentication/signup"
					},
					"response": [
						{
							"name": "Positive SignUp",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"lola.forbes@live.com\",\r\n  \"firstName\": \"Lola\",\r\n  \"lastName\": \"Forbes\",\r\n  \"password\": \"456789\",\r\n  \"terms\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60968/authentication/authentication/signup"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 29 Oct 2023 06:19:28 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"isSuccess\": true\n}"
						},
						{
							"name": "Negative SignUp Invalid email address",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"lola.forbes\",\r\n  \"firstName\": \"Lola\",\r\n  \"lastName\": \"Forbes\",\r\n  \"password\": \"456789\",\r\n  \"terms\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60968/authentication/authentication/signup"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 29 Oct 2023 06:20:36 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"isSuccess\": true\n}"
						},
						{
							"name": "Negative SignUp Null Parameters",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"\",\r\n  \"firstName\": \"\",\r\n  \"lastName\": \"\",\r\n  \"password\": \"\",\r\n  \"terms\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60968/authentication/authentication/signup"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 29 Oct 2023 06:23:51 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"isSuccess\": false,\n    \"message\": \"Parameter can not be null\"\n}"
						}
					]
				},
				{
					"name": "SignIn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validating User Authentication\", function () {\r",
									"    var response = pm.response.json();\r",
									"    \r",
									"    if (response.isSuccess) {\r",
									"        pm.expect(response.isSuccess).to.be.true;\r",
									"        pm.expect(response.hasOwnProperty(\"token\")).to.be.true;\r",
									"        postman.setEnvironmentVariable(\"JWT\", response.token.token);\r",
									"    } else {\r",
									"        pm.expect(response.isSuccess).to.be.false\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"saarah.iq@hotmail.com\",\r\n  \"password\": \"456456\",\r\n  \"rememberMe\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:60968/authentication/authentication/signin"
					},
					"response": [
						{
							"name": "Sign In Successfully",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"saarah.iq@hotmail.com\",\r\n  \"password\": \"123123\",\r\n  \"rememberMe\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60968/authentication/authentication/signin"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 15 Oct 2023 06:05:10 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"isSuccess\": true,\n    \"token\": {\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NDIxMDg4YzYxNDU0NjAwMDE2NzkzZmUiLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjYwOTY4IiwiaWF0IjoxNjk3MzQ5OTExLCJleHAiOjE2OTczNTM1MTEsInVuaXF1ZV9uYW1lIjoiNjQyMTA4OGM2MTQ1NDYwMDAxNjc5M2ZlIn0.J-1zagwg7DjHr0nNWaD_adN0CDbqIbLWWfkBHgmC0Cw\",\n        \"expires\": 1697353511\n    }\n}"
						},
						{
							"name": "Sign In Unsuccessfully",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"saarah.iq@hotmail.com\",\r\n  \"password\": \"badfsd\",\r\n  \"rememberMe\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60968/authentication/authentication/signin"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 15 Oct 2023 06:14:22 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"isSuccess\": false\n}"
						}
					]
				},
				{
					"name": "Update Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Validate Updated Password Successfully\", function () {\r",
									"    var response = pm.response.json();\r",
									"     pm.expect(response.success).to.be.true;\r",
									"     pm.expect(response.message).to.equal(\"Password Changed Successfully\");\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Updated Password Unsuccessful\", function () {\r",
									"    var response = pm.response.json();\r",
									"     pm.expect(response.success).to.be.false;\r",
									"     pm.expect(response.message).to.equal(\"Password Verification Failed\");\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Negative Updated Password With Null Values\", function () {\r",
									"    var response = pm.response.json();\r",
									"     pm.expect(response.success).to.be.false;\r",
									"     pm.expect(response.message).to.equal(\"Error while Updating Password details\");\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Negative User Not Authenticated \", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"newPassword\": \"456456\",\r\n  \"oldPassword\": \"helloWorld\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:60968/authentication/authentication/updatePassword"
					},
					"response": [
						{
							"name": "Positive Successfully Update Password",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"newPassword\": \"helloWorld\",\r\n  \"oldPassword\": \"456456\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60968/authentication/authentication/updatePassword"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 29 Oct 2023 06:34:54 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Password Changed Successfully\"\n}"
						},
						{
							"name": "Negative Invalid Old Password",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"newPassword\": \"helloWorld\",\r\n  \"oldPassword\": \"456456\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60968/authentication/authentication/updatePassword"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 29 Oct 2023 06:35:36 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Password Verification Failed\"\n}"
						},
						{
							"name": "Negative Null Values",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"newPassword\": \"\",\r\n  \"oldPassword\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60968/authentication/authentication/updatePassword"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 29 Oct 2023 06:40:52 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Error while Updating Password details\"\n}"
						},
						{
							"name": "Negative User Not Authenticated",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"newPassword\": \"\",\r\n  \"oldPassword\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60968/authentication/authentication/updatePassword"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 29 Oct 2023 06:46:37 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "WWW-Authenticate",
									"value": "Bearer"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Language endpoints",
			"item": [
				{
					"name": "Add Language",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    var message = response.message;\r",
									"\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Positive Add Language\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.id).is.not.empty;\r",
									"        });\r",
									"    } else {\r",
									"        if (message == \"This language is already exist in your language list.\") {\r",
									"            pm.test(\"Negative Duplicate Language\", function () {\r",
									"                var response = pm.response.json();\r",
									"                pm.expect(response.success).to.be.false;\r",
									"                pm.expect(response.message).to.equal(\"This language is already exist in your language list.\");\r",
									"            });\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"    var response = pm.response.body\r",
									"    pm.test(\"Unable to Add Language without User being Authenticated\", function () {\r",
									"        pm.expect(response).to.be.undefined;\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"level\": \"\",\r\n  \"name\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:60190/profile/profile/addLanguage"
					},
					"response": [
						{
							"name": "Negative Duplicate Add Language",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"level\": \"Conversational\",\r\n  \"name\": \"Japanesehbhjbhjjh\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/addLanguage"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 29 Oct 2023 06:58:03 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"This language is already exist in your language list.\"\n}"
						},
						{
							"name": "Positive Add Language",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"level\": \"Fluent\",\r\n  \"name\": \"Maori\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/addLanguage"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 29 Oct 2023 07:02:15 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"653e0378d2f09900013cf601\"\n}"
						},
						{
							"name": "Negative Invalid Inputs",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"level\": \"Beginner\",\r\n  \"name\": \"@$%@$^#^\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/addLanguage"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 29 Oct 2023 07:10:51 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"This language is already exist in your language list.\"\n}"
						},
						{
							"name": "Negative Null Inputs",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"level\": \"\",\r\n  \"name\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/addLanguage"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 29 Oct 2023 07:12:50 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"653e05f3d2f09900013cf605\"\n}"
						}
					]
				},
				{
					"name": "Delete Language",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    pm.test(\"Positive Delete Language\", function () {\r",
									"        var response = pm.response.json();\r",
									"        pm.expect(response.success).to.be.true;\r",
									"        pm.expect(response.language).exist;\r",
									"    });\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"    var response = pm.response.body\r",
									"    pm.test(\"Unable to Delete Language without User being Authenticated\", function () {\r",
									"        pm.expect(response).to.be.undefined;\r",
									"    });\r",
									"}\r",
									"\r",
									"if (statusCode == 500) {\r",
									"    pm.test(\"Negative Delete Language Invalid Id\", function () {\r",
									"        pm.response.to.have.status(500);\r",
									"    \r",
									"    });\r",
									"\r",
									"    pm.test(\"Negative Delete Language Empty Id Field\", function () {\r",
									"        pm.response.to.have.status(500);\r",
									"    \r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"653e05d7d2f09900013cf604\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:60190/profile/profile/deleteLanguage"
					},
					"response": [
						{
							"name": "Delete Language",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"651e6c7ddf05b20001157f29\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/deleteLanguage"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 29 Oct 2023 07:28:02 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "Positive Delete Language",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"653e0378d2f09900013cf601\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/deleteLanguage"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 29 Oct 2023 07:30:36 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"language\": \"Maori\"\n}"
						},
						{
							"name": "Negative Delete Language Invalid Id",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"653e0378d2f09900013cf601\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/deleteLanguage"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 29 Oct 2023 07:32:26 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "Negative Empty Id Field",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/deleteLanguage"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 29 Oct 2023 07:34:42 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Get Language",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    pm.test(\"Successfully Get The List of Languages\", function () {\r",
									"        var response = pm.response.json();\r",
									"        pm.response.to.have.status(200);\r",
									"        pm.expect(response).to.be.an('array');\r",
									"    });\r",
									"}\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to return Languages because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "http://localhost:60190/profile/profile/getLanguage"
					},
					"response": [
						{
							"name": "Get Languages Successfully",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:60190/profile/profile/getLanguage"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 29 Oct 2023 07:24:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"personLanguageId\": \"653e0322d2f09900013cf600\",\n        \"language\": \"French\",\n        \"languageLevel\": \"Basic\"\n    },\n    {\n        \"personLanguageId\": \"653e0378d2f09900013cf601\",\n        \"language\": \"Maori\",\n        \"languageLevel\": \"Fluent\"\n    },\n    {\n        \"personLanguageId\": \"653e042fd2f09900013cf602\",\n        \"language\": \"\",\n        \"languageLevel\": \"Beginner\"\n    },\n    {\n        \"personLanguageId\": \"653e0540d2f09900013cf603\",\n        \"language\": \"@$%@$^#^\",\n        \"languageLevel\": \"Beginner\"\n    },\n    {\n        \"personLanguageId\": \"653e05d7d2f09900013cf604\",\n        \"language\": \"@$%@$^??^\",\n        \"languageLevel\": \"AFSDGSF%^\"\n    },\n    {\n        \"personLanguageId\": \"653e05f3d2f09900013cf605\",\n        \"language\": \"\",\n        \"languageLevel\": \"\"\n    }\n]"
						}
					]
				},
				{
					"name": "Update Language",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    var message = response.message;\r",
									"\r",
									"    if (message == \"Language added successfully\") {\r",
									"        pm.test(\"Validate Updated Language Successfully\", function () {\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.message).to.equal(\"Language added successfully\");\r",
									"        });\r",
									"    }\r",
									"\r",
									"    if (message == \"This language is already added to your language list.\") {\r",
									"        pm.test(\"Validate Duplicate Language\", function () {\r",
									"            pm.expect(response.success).to.be.false;\r",
									"            pm.expect(response.message).to.equal(\"This language is already added to your language list.\");\r",
									"        });\r",
									"    }\r",
									"\r",
									"    if (message == \"Error while adding new language\") {\r",
									"        pm.test(\"Unable to Update Language without ID\", function () {\r",
									"            pm.expect(response.success).to.be.false;\r",
									"            pm.expect(response.message).to.equal(\"Error while adding new language\");\r",
									"        });\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"    var response = pm.response.body\r",
									"    pm.test(\"Unable to Update Language without User being Authenticated\", function () {\r",
									"        pm.expect(response).to.be.undefined;\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"653e042fd2f09900013cf602\",\r\n  \"level\": \"Basic\",\r\n  \"name\": \"Chinese\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:60190/profile/profile/updateLanguage"
					},
					"response": [
						{
							"name": "Positive Update Language",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"653e042fd2f09900013cf602\",\r\n  \"level\": \"Basic\",\r\n  \"name\": \"Spanish\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/updateLanguage"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 29 Oct 2023 07:38:33 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Language added successfully\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Skill endpoints",
			"item": [
				{
					"name": "Add Skill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    var message = response.message;\r",
									"\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Positive Add Skill\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.id).is.not.empty;\r",
									"        });\r",
									"    } else {\r",
									"        if (response.message == \"This skill is already exist in your skill list.\") {\r",
									"            pm.test(\"Negative Duplicate Skill\", function () {\r",
									"                var response = pm.response.json();\r",
									"                pm.expect(response.success).to.be.false;\r",
									"                pm.expect(response.message).to.equal(\"This skill is already exist in your skill list.\");\r",
									"            });\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"    var response = pm.response.body\r",
									"    pm.test(\"Unable to Update Skill without User being Authenticated\", function () {\r",
									"        pm.expect(response).to.be.undefined;\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ExperienceLevel\": \"sgjkdlja\",\r\n  \"Skill\": \"High Jump\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:60190/profile/profile/addSkill"
					},
					"response": [
						{
							"name": "Negative Add Skill",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ExperienceLevel\": \"\",\r\n  \"PersonSkillId\": \"\",\r\n  \"Skill\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/addSkill"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 04:56:48 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"This skill is already exist in your skill list.\"\n}"
						},
						{
							"name": "Positive Add Skill",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ExperienceLevel\": \"Expert\",\r\n  \"Skill\": \"Swimming\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/addSkill"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 05:55:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"655851cfd7544b0001af9abc\"\n}"
						},
						{
							"name": "Negative Invalid Skill Level",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ExperienceLevel\": \"sgjkdlja\",\r\n  \"Skill\": \"High Jump\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/addSkill"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 05:58:22 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"6558527fd7544b0001af9abe\"\n}"
						}
					]
				},
				{
					"name": "Delete Skill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    var message = response.message;\r",
									"\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Positive Delete Skill\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.skill).to.not.be.empty;\r",
									"        });\r",
									"    } else {\r",
									"        if (response.message == \"Error while deleting skill Object reference not set to an instance of an object.\") {\r",
									"            pm.test(\"Negative Delete Skill\", function () {\r",
									"                var response = pm.response.json();\r",
									"                pm.expect(response.success).to.be.false;\r",
									"                pm.expect(response.message).to.equal(\"Error while deleting skill Object reference not set to an instance of an object.\");\r",
									"            });\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"    var response = pm.response.body\r",
									"    pm.test(\"Unable to Delete Skill without User being Authenticated\", function () {\r",
									"        pm.expect(response).to.be.undefined;\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"PersonSkillId\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:60190/profile/profile/deleteSkill"
					},
					"response": [
						{
							"name": "Negative No ID Delete Skill",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"PersonSkillId\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/deleteSkill"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 06:20:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Error while deleting skill '' is not a valid 24 digit hex string.\"\n}"
						},
						{
							"name": "Positive Delete Skill",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"PersonSkillId\": \"65223c0cdf05b20001157f32\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/deleteSkill"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 06:23:36 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"skill\": \"Violin\"\n}"
						}
					]
				},
				{
					"name": "Get Skill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    pm.test(\"Successfully Get The List of Skills\", function () {\r",
									"        var response = pm.response.json();\r",
									"        pm.response.to.have.status(200);\r",
									"        pm.expect(response).to.be.an('array');\r",
									"    });\r",
									"}\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to return Skills because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "http://localhost:60190/profile/profile/getSkill"
					},
					"response": []
				},
				{
					"name": "Update Skill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    var message = response.message;\r",
									"\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Validate Updated Skill Successfully\", function () {\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.id).to.not.be.empty;\r",
									"        });\r",
									"    }\r",
									"\r",
									"    if (message == \"This skill is already added to your skill list.\") {\r",
									"        pm.test(\"Validate Duplicate Skill\", function () {\r",
									"            pm.expect(response.success).to.be.false;\r",
									"            pm.expect(response.message).to.equal(\"This skill is already added to your skill list.\");\r",
									"        });\r",
									"    }\r",
									"\r",
									"    if (message == \"Error while adding new language '' is not a valid 24 digit hex string.\") {\r",
									"        pm.test(\"Unable to Update Skill without ID\", function () {\r",
									"            pm.expect(response.success).to.be.false;\r",
									"            pm.expect(response.message).to.equal(\"Error while adding new language '' is not a valid 24 digit hex string.\");\r",
									"        });\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"    var response = pm.response.body\r",
									"    pm.test(\"Unable to Update Skill without User being Authenticated\", function () {\r",
									"        pm.expect(response).to.be.undefined;\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ExperienceLevel\": \"Beginner\",\r\n  \"PersonSkillId\": \"65223c0cdf05b20001157f32\",\r\n  \"Skill\": \"Violin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:60190/profile/profile/updateSkill"
					},
					"response": [
						{
							"name": "Positive Update Skill",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ExperienceLevel\": \"Beginner\",\r\n  \"PersonSkillId\": \"65223c0cdf05b20001157f32\",\r\n  \"Skill\": \"Violin\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/updateSkill"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 06:08:23 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"65223c0cdf05b20001157f32\"\n}"
						},
						{
							"name": "Negative Duplicate Update Skill",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ExperienceLevel\": \"Beginner\",\r\n  \"PersonSkillId\": \"65223c0cdf05b20001157f32\",\r\n  \"Skill\": \"Violin\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/updateSkill"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 06:08:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"This skill is already added to your skill list.\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Certification endpoints",
			"item": [
				{
					"name": "Add Certification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    var message = response.message;\r",
									"\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Positive Add Certification\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.id).is.not.empty;\r",
									"        });\r",
									"    } else {\r",
									"        if (message == \"This information is already exist.\") {\r",
									"            pm.test(\"Negative Duplicate Certification\", function () {\r",
									"                var response = pm.response.json();\r",
									"                pm.expect(response.success).to.be.false;\r",
									"                pm.expect(response.message).to.equal(\"This information is already exist.\");\r",
									"            });\r",
									"        }\r",
									"        if (message == \"Error while adding new certification\") {\r",
									"            pm.test(\"Negative Empty Certification\", function () {\r",
									"                var response = pm.response.json();\r",
									"                pm.expect(response.success).to.be.false;\r",
									"                pm.expect(response.message).to.equal(\"Error while adding new certification\");\r",
									"            });\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"    var response = pm.response.body\r",
									"    pm.test(\"Unable to Add Certification without User being Authenticated\", function () {\r",
									"        pm.expect(response).to.be.undefined;\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"certificationFrom\": \"Otago\",\r\n  \"certificationName\": \"Qa2023\",\r\n  \"certificationYear\": \"2020\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:60190/profile/profile/addCertification"
					},
					"response": [
						{
							"name": "Positive Add Certification",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"certificationFrom\": \"Otago\",\r\n  \"certificationName\": \"Qa2023\",\r\n  \"certificationYear\": \"2020\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/addCertification"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 06:10:07 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"6558553fd7544b0001af9abf\"\n}"
						},
						{
							"name": "Negative Add Certification",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"certificationFrom\": \"Otago\",\r\n  \"certificationName\": \"Qa2023\",\r\n  \"certificationYear\": \"2020\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/addCertification"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 06:11:23 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"This information is already exist.\"\n}"
						},
						{
							"name": "Negative Empty Certification",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"certificationFrom\": \" \",\r\n  \"certificationName\": \" \",\r\n  \"certificationYear\": \" \"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/addCertification"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 06:16:44 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Error while adding new certification\"\n}"
						}
					]
				},
				{
					"name": "Get Certification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    pm.test(\"Successfully Get The List of Certifications\", function () {\r",
									"        var response = pm.response.json();\r",
									"        pm.response.to.have.status(200);\r",
									"        pm.expect(response).to.be.an('array');\r",
									"    });\r",
									"}\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to return Certifications because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "http://localhost:60190/profile/profile/getCertification"
					},
					"response": [
						{
							"name": "No Auth Token present",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:60190/profile/profile/getCertification"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 06:18:59 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "WWW-Authenticate",
									"value": "Bearer"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Delete Certification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    var message = response.message;\r",
									"\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Positive Delete Certification\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.certificationName).to.not.be.empty;\r",
									"        });\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"    var response = pm.response.body\r",
									"    pm.test(\"Unable to Delete Certification without User being Authenticated\", function () {\r",
									"        pm.expect(response).to.be.undefined;\r",
									"    });\r",
									"}\r",
									"if (statusCode == 500) {\r",
									"    var response = pm.response.body\r",
									"    pm.test(\"Unable to Delete Certification due to error 500\", function () {\r",
									"        pm.expect(response).to.be.undefined;\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"6558553fd7544b0001af9abf\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:60190/profile/profile/deleteCertification"
					},
					"response": [
						{
							"name": "Negative Delete Certifications",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/deleteCertification"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 06:30:09 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "Positive Delete Certifications",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"6558553fd7544b0001af9abf\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/deleteCertification"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 06:31:24 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Update Certification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    var message = response.message;\r",
									"\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Validate Updated Certification Successfully\", function () {\r",
									"            pm.expect(response.success).to.be.true;\r",
									"        });\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"    var response = pm.response.body\r",
									"    pm.test(\"Unable to Update Certification without User being Authenticated\", function () {\r",
									"        pm.expect(response).to.be.undefined;\r",
									"    });\r",
									"}\r",
									"if (statusCode == 500) {\r",
									"    var response = pm.response.body\r",
									"    pm.test(\"Unable to Update Certification due to 500 Error\", function () {\r",
									"        pm.expect(response).to.be.undefined;\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"certificationFrom\": \"Yoobee\",\r\n  \"certificationName\": \"test1233\",\r\n  \"certificationYear\": \"2022\",\r\n  \"id\": \"65585c38d7544b0001af9ac4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:60190/profile/profile/updateCertification"
					},
					"response": [
						{
							"name": "Positive Update Certification",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"certificationFrom\": \"Yoobee\",\r\n  \"certificationName\": \"test122\",\r\n  \"certificationYear\": \"2022\",\r\n  \"id\": \"65585c38d7544b0001af9ac4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/updateCertification"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 06:40:41 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true\n}"
						},
						{
							"name": "Negative Duplicate Update Certification",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"certificationFrom\": \"Yoobee\",\r\n  \"certificationName\": \"test122\",\r\n  \"certificationYear\": \"2022\",\r\n  \"id\": \"65585c38d7544b0001af9ac4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/updateCertification"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 06:41:21 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"This information is already exist.\"\n}"
						},
						{
							"name": "Negative Update Certification",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"certificationFrom\": \"\",\r\n  \"certificationName\": \"test122\",\r\n  \"certificationYear\": \"Year\",\r\n  \"id\": \"65585c38d7544b0001af9ac4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/updateCertification"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 06:44:17 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "Negative Invalid ID Update Certification",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"certificationFrom\": \"\",\r\n  \"certificationName\": \"test122\",\r\n  \"certificationYear\": \"Year\",\r\n  \"id\": \"16546\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/updateCertification"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 06:45:05 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "Education endpoints",
			"item": [
				{
					"name": "Add Education",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    var message = response.message;\r",
									"\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Positive Add Education\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.id).is.not.empty;\r",
									"        });\r",
									"    } else {\r",
									"        if (message == \"This information is already exist.\") {\r",
									"            pm.test(\"Negative Duplicate Education\", function () {\r",
									"                var response = pm.response.json();\r",
									"                pm.expect(response.success).to.be.false;\r",
									"                pm.expect(response.message).to.equal(\"This information is already exist.\");\r",
									"            });\r",
									"        }\r",
									"        if (message == \"Education information was invalid\") {\r",
									"            pm.test(\"Negative Empty Inputs Certification\", function () {\r",
									"                var response = pm.response.json();\r",
									"                pm.expect(response.success).to.be.false;\r",
									"                pm.expect(response.message).to.equal(\"Education information was invalid\");\r",
									"            });\r",
									"        }\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"    var response = pm.response.body\r",
									"    pm.test(\"Unable to Add Education without User being Authenticated\", function () {\r",
									"        pm.expect(response).to.be.undefined;\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"country\": \"\",\r\n  \"degree\": \"Business\",\r\n  \"instituteName\": \"Oxford\",\r\n  \"title\": \"\",\r\n  \"yearOfGraduation\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:60190/profile/profile/addEducation"
					},
					"response": [
						{
							"name": "Negative Duplicate Add Education",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"country\": \"United Kingdom\",\r\n  \"degree\": \"Business\",\r\n  \"instituteName\": \"Oxford\",\r\n  \"title\": \"B.A\",\r\n  \"yearOfGraduation\": \"2020\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/addEducation"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 06:51:50 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"This information is already exist.\"\n}"
						},
						{
							"name": "Positive Add Education",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"country\": \"United Kingdom\",\r\n  \"degree\": \"Business\",\r\n  \"instituteName\": \"Oxford\",\r\n  \"title\": \"B.A\",\r\n  \"yearOfGraduation\": \"2016\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/addEducation"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 06:52:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"65585f2bd7544b0001af9ac9\"\n}"
						},
						{
							"name": "Negative Empty Inputs",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"country\": \"\",\r\n  \"degree\": \"Business\",\r\n  \"instituteName\": \"Oxford\",\r\n  \"title\": \"\",\r\n  \"yearOfGraduation\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/addEducation"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 06:54:02 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Education information was invalid\"\n}"
						}
					]
				},
				{
					"name": "Get Education",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    pm.test(\"Successfully Get The List of Educations\", function () {\r",
									"        var response = pm.response.json();\r",
									"        pm.response.to.have.status(200);\r",
									"        pm.expect(response.education).to.be.an('array');\r",
									"        pm.expect(response.success).to.be.true;\r",
									"    });\r",
									"}\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to return Education because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "http://localhost:60190/profile/profile/getEducation"
					},
					"response": [
						{
							"name": "No Auth Token present",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:60190/profile/profile/getEducation"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 06:54:55 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "WWW-Authenticate",
									"value": "Bearer"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Delete Education",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    var message = response.message;\r",
									"\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Positive Delete Education\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.message).to.not.be.empty;\r",
									"        });\r",
									"    } else {\r",
									"         pm.test(\"Negative Invalid ID\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.expect(response.success).to.be.false;\r",
									"            pm.expect(response.message).to.equal(\"Education entry not found\");\r",
									"         });\r",
									"    }\r",
									"\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"    var response = pm.response.body\r",
									"    pm.test(\"Unable to Delete Education without User being Authenticated\", function () {\r",
									"        pm.expect(response).to.be.undefined;\r",
									"    });\r",
									"}\r",
									"if (statusCode == 500) {\r",
									"    var response = pm.response.body\r",
									"    pm.test(\"Unable to Delete Education due to error 500\", function () {\r",
									"        pm.expect(response).to.be.undefined;\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"6522424fdf05b20001157f37\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:60190/profile/profile/deleteEducation"
					},
					"response": [
						{
							"name": "Negative Invalid ID",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"65224089df05b20001157f36\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/deleteEducation"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 07:09:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Education entry not found\"\n}"
						},
						{
							"name": "Positive Delete Education",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"6522424fdf05b20001157f37\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/deleteEducation"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 07:10:46 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Education Deleted Successfully\"\n}"
						}
					]
				},
				{
					"name": "Update Education",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    var message = response.message;\r",
									"\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Validate Updated Education Successfully\", function () {\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.message).to.equal(\"Education Updated Successfully\");\r",
									"        });\r",
									"    } else {\r",
									"        pm.test(\"Negative Inputs Update Education \", function () {\r",
									"            pm.expect(response.success).to.be.false;\r",
									"            pm.expect(response.message).to.equal(\"Education information was invalid\");\r",
									"        });\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"    var response = pm.response.body\r",
									"    pm.test(\"Unable to Update Education without User being Authenticated\", function () {\r",
									"        pm.expect(response).to.be.undefined;\r",
									"    });\r",
									"}\r",
									"if (statusCode == 500) {\r",
									"    var response = pm.response.body\r",
									"    pm.test(\"Unable to Update Education due to 500 Error\", function () {\r",
									"        pm.expect(response).to.be.undefined;\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"country\": \"\",\r\n  \"degree\": \"Arts\",\r\n  \"id\": \"\",\r\n  \"instituteName\": \"test14\",\r\n  \"title\": \"$#!%@^$\",\r\n  \"yearOfGraduation\": 2018\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:60190/profile/profile/updateEducation"
					},
					"response": [
						{
							"name": "Positive Update Education",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"country\": \"Bulgaria\",\r\n  \"degree\": \"Arts\",\r\n  \"id\": \"6522424fdf05b20001157f37\",\r\n  \"instituteName\": \"test14\",\r\n  \"title\": \"BArch\",\r\n  \"yearOfGraduation\": 2018\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/updateEducation"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 07:01:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Education Updated Successfully\"\n}"
						},
						{
							"name": "Negative Inputs Update Education",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"country\": \"\",\r\n  \"degree\": \"Arts\",\r\n  \"id\": \"\",\r\n  \"instituteName\": \"test14\",\r\n  \"title\": \"$#!%@^$\",\r\n  \"yearOfGraduation\": 2018\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/updateEducation"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 07:06:13 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Education information was invalid\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Listing endpoints",
			"item": [
				{
					"name": "Get Service Category Count",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Get Notifications\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.data).to.be.an('array');\r",
									"        });\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 500) {\r",
									"     pm.test(\"Unable to Get Service Category count\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Get Service Category count because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"sortPagination\": {\r\n    \"limit\": 9,\r\n    \"offset\": 0\r\n  },\r\n  \"terms\": {\r\n    \"categoryIndex\": null,\r\n    \"searchString\": \"test\",\r\n    \"subcategoryIndex\": null,\r\n    \"uId\": null\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:51689/listing/listing/getServiceCategoryCount"
					},
					"response": [
						{
							"name": "Positive Get Service Category Count",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"sortPagination\": {\r\n    \"limit\": 9,\r\n    \"offset\": 0\r\n  },\r\n  \"terms\": {\r\n    \"categoryIndex\": null,\r\n    \"searchString\": \"test\",\r\n    \"subcategoryIndex\": null,\r\n    \"uId\": null\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:51689/listing/listing/getServiceCategoryCount"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:01:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"categoryId\": 4,\n            \"subcategoryId\": 6,\n            \"count\": 1\n        },\n        {\n            \"categoryId\": 7,\n            \"subcategoryId\": 5,\n            \"count\": 2\n        },\n        {\n            \"categoryId\": 5,\n            \"subcategoryId\": 4,\n            \"count\": 3\n        },\n        {\n            \"categoryId\": 7,\n            \"subcategoryId\": 4,\n            \"count\": 2\n        },\n        {\n            \"categoryId\": 8,\n            \"subcategoryId\": 1,\n            \"count\": 5\n        },\n        {\n            \"categoryId\": 6,\n            \"subcategoryId\": 1,\n            \"count\": 2\n        },\n        {\n            \"categoryId\": 7,\n            \"subcategoryId\": 6,\n            \"count\": 20\n        },\n        {\n            \"categoryId\": 6,\n            \"subcategoryId\": 6,\n            \"count\": 3\n        },\n        {\n            \"categoryId\": 5,\n            \"subcategoryId\": 3,\n            \"count\": 3\n        },\n        {\n            \"categoryId\": 3,\n            \"subcategoryId\": 2,\n            \"count\": 17\n        },\n        {\n            \"categoryId\": 8,\n            \"subcategoryId\": 5,\n            \"count\": 7\n        },\n        {\n            \"categoryId\": 5,\n            \"subcategoryId\": 2,\n            \"count\": 12\n        },\n        {\n            \"categoryId\": 3,\n            \"subcategoryId\": 4,\n            \"count\": 9\n        },\n        {\n            \"categoryId\": 7,\n            \"subcategoryId\": 1,\n            \"count\": 14\n        },\n        {\n            \"categoryId\": 1,\n            \"subcategoryId\": 3,\n            \"count\": 21\n        },\n        {\n            \"categoryId\": 2,\n            \"subcategoryId\": 4,\n            \"count\": 10\n        },\n        {\n            \"categoryId\": 6,\n            \"subcategoryId\": 2,\n            \"count\": 34\n        },\n        {\n            \"categoryId\": 4,\n            \"subcategoryId\": 2,\n            \"count\": 13\n        },\n        {\n            \"categoryId\": 2,\n            \"subcategoryId\": 1,\n            \"count\": 35\n        },\n        {\n            \"categoryId\": 6,\n            \"subcategoryId\": 5,\n            \"count\": 11\n        },\n        {\n            \"categoryId\": 1,\n            \"subcategoryId\": 4,\n            \"count\": 2\n        },\n        {\n            \"categoryId\": 1,\n            \"subcategoryId\": 2,\n            \"count\": 230\n        },\n        {\n            \"categoryId\": 4,\n            \"subcategoryId\": 3,\n            \"count\": 8\n        },\n        {\n            \"categoryId\": 6,\n            \"subcategoryId\": 4,\n            \"count\": 421\n        },\n        {\n            \"categoryId\": 8,\n            \"subcategoryId\": 2,\n            \"count\": 6\n        },\n        {\n            \"categoryId\": 8,\n            \"subcategoryId\": 6,\n            \"count\": 1\n        },\n        {\n            \"categoryId\": 2,\n            \"subcategoryId\": 3,\n            \"count\": 20\n        },\n        {\n            \"categoryId\": 6,\n            \"subcategoryId\": 3,\n            \"count\": 12\n        },\n        {\n            \"categoryId\": 7,\n            \"subcategoryId\": 2,\n            \"count\": 6\n        },\n        {\n            \"categoryId\": 4,\n            \"subcategoryId\": 1,\n            \"count\": 3\n        },\n        {\n            \"categoryId\": 3,\n            \"subcategoryId\": 5,\n            \"count\": 4\n        },\n        {\n            \"categoryId\": 2,\n            \"subcategoryId\": 2,\n            \"count\": 85\n        },\n        {\n            \"categoryId\": 7,\n            \"subcategoryId\": 3,\n            \"count\": 4\n        },\n        {\n            \"categoryId\": 8,\n            \"subcategoryId\": 4,\n            \"count\": 17\n        },\n        {\n            \"categoryId\": 1,\n            \"subcategoryId\": 1,\n            \"count\": 51\n        },\n        {\n            \"categoryId\": 5,\n            \"subcategoryId\": 1,\n            \"count\": 5\n        },\n        {\n            \"categoryId\": 3,\n            \"subcategoryId\": 1,\n            \"count\": 6\n        },\n        {\n            \"categoryId\": 3,\n            \"subcategoryId\": 3,\n            \"count\": 28\n        }\n    ]\n}"
						},
						{
							"name": "Negative Get Service Category Count",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"sortPagination\": {\r\n    \"limit\": 9,\r\n    \"offset\": 0\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:51689/listing/listing/getServiceCategoryCount"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:01:57 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "Negative Get Service Category Count",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:51689/listing/listing/getServiceCategoryCount"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:02:21 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Add Listing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Add Listing\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.id).to.exist;\r",
									"            pm.expect(response.editFlag).to.exist;\r",
									"        });\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 500) {\r",
									"     pm.test(\"Unable to Add Listing because of an Internal Server Error\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Add Listing because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Test Analyst\",\r\n    \"description\": \"Provide Selenium and API testing skills\",\r\n    \"categoryId\": \"6\",\r\n    \"subcategoryId\": \"4\",\r\n    \"tags\": [\r\n        {\r\n            \"id\": \"API\",\r\n            \"text\": \"API\"\r\n        },\r\n        {\r\n            \"id\": \"Selenium\",\r\n            \"text\": \"Selenium\"\r\n        }\r\n    ],\r\n    \"serviceType\": 0,\r\n    \"locationType\": 1,\r\n    \"availability\": {\r\n        \"startDate\": \"2023-09-18\",\r\n        \"endDate\": \"\",\r\n        \"dayEntries\": [\r\n            {\r\n                \"StartTime\": \"\",\r\n                \"EndTime\": \"\",\r\n                \"Available\": false\r\n            },\r\n            {\r\n                \"StartTime\": \"06:30\",\r\n                \"EndTime\": \"14:30\",\r\n                \"Available\": true\r\n            },\r\n            {\r\n                \"StartTime\": \"\",\r\n                \"EndTime\": \"\",\r\n                \"Available\": false\r\n            },\r\n            {\r\n                \"StartTime\": \"\",\r\n                \"EndTime\": \"\",\r\n                \"Available\": false\r\n            },\r\n            {\r\n                \"StartTime\": \"\",\r\n                \"EndTime\": \"\",\r\n                \"Available\": false\r\n            },\r\n            {\r\n                \"StartTime\": \"\",\r\n                \"EndTime\": \"\",\r\n                \"Available\": false\r\n            },\r\n            {\r\n                \"StartTime\": \"\",\r\n                \"EndTime\": \"\",\r\n                \"Available\": false\r\n            }\r\n        ]\r\n    },\r\n    \"skillTrade\": [\r\n        {\r\n            \"id\": \"SQL\",\r\n            \"text\": \"SQL\"\r\n        },\r\n        {\r\n            \"id\": \"Java\",\r\n            \"text\": \"Java\"\r\n        }\r\n    ],\r\n    \"isTradable\": false,\r\n    \"charge\": 0,\r\n    \"credentials\": true,\r\n    \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:51689/listing/listing/addListing"
					},
					"response": [
						{
							"name": "Positive Add Listing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"Test Analyst\",\r\n    \"description\": \"Provide Selenium and API testing skills\",\r\n    \"categoryId\": \"6\",\r\n    \"subcategoryId\": \"4\",\r\n    \"tags\": [\r\n        {\r\n            \"id\": \"API\",\r\n            \"text\": \"API\"\r\n        },\r\n        {\r\n            \"id\": \"Selenium\",\r\n            \"text\": \"Selenium\"\r\n        }\r\n    ],\r\n    \"serviceType\": 0,\r\n    \"locationType\": 1,\r\n    \"availability\": {\r\n        \"startDate\": \"2023-09-18\",\r\n        \"endDate\": \"\",\r\n        \"dayEntries\": [\r\n            {\r\n                \"StartTime\": \"\",\r\n                \"EndTime\": \"\",\r\n                \"Available\": false\r\n            },\r\n            {\r\n                \"StartTime\": \"06:30\",\r\n                \"EndTime\": \"14:30\",\r\n                \"Available\": true\r\n            },\r\n            {\r\n                \"StartTime\": \"\",\r\n                \"EndTime\": \"\",\r\n                \"Available\": false\r\n            },\r\n            {\r\n                \"StartTime\": \"\",\r\n                \"EndTime\": \"\",\r\n                \"Available\": false\r\n            },\r\n            {\r\n                \"StartTime\": \"\",\r\n                \"EndTime\": \"\",\r\n                \"Available\": false\r\n            },\r\n            {\r\n                \"StartTime\": \"\",\r\n                \"EndTime\": \"\",\r\n                \"Available\": false\r\n            },\r\n            {\r\n                \"StartTime\": \"\",\r\n                \"EndTime\": \"\",\r\n                \"Available\": false\r\n            }\r\n        ]\r\n    },\r\n    \"skillTrade\": [\r\n        {\r\n            \"id\": \"SQL\",\r\n            \"text\": \"SQL\"\r\n        },\r\n        {\r\n            \"id\": \"Java\",\r\n            \"text\": \"Java\"\r\n        }\r\n    ],\r\n    \"isTradable\": false,\r\n    \"charge\": 0,\r\n    \"credentials\": true,\r\n    \"isActive\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:51689/listing/listing/addListing"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:41:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"6562f6afddcdfb00011c32c8\",\n    \"editFlag\": false\n}"
						}
					]
				},
				{
					"name": "Delete Listing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Delete Listing\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.title).to.exist;\r",
									"        });\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 500) {\r",
									"     pm.test(\"Unable to Delete Listing because of an Internal Server Error\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Delete Listing because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\"65260eb7a044c900017ee72c\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:51689/listing/listing/deleteServiceListing"
					},
					"response": [
						{
							"name": "Negative Delete Listing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"65260eb7a044c900017de72c\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:51689/listing/listing/deleteServiceListing"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:37:14 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "Negative Delete Listing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"TEST\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:51689/listing/listing/deleteServiceListing"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:37:24 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "Positive Delete Listing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"65260eb7a044c900017ee72c\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:51689/listing/listing/deleteServiceListing"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:37:34 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"title\": \"Test Analyst\"\n}"
						}
					]
				},
				{
					"name": "Get Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Get Service\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.serviceListing).to.be.an('object');\r",
									"            pm.expect(response.categoryTuple).to.be.an('object');\r",
									"            pm.expect(response.currentUserId).to.be.exist;\r",
									"        });\r",
									"    } else {\r",
									"        pm.test(\"Unable to Get Service\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.false;\r",
									"        });\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Get Service because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:51689/listing/listing/GetService/?id={{ServiceListingID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "51689",
							"path": [
								"listing",
								"listing",
								"GetService",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "{{ServiceListingID}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Negative Get Service",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:51689/listing/listing/GetService"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:07:56 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false\n}"
						},
						{
							"name": "Positive Get Service",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:51689/listing/listing/GetService/?id={{ServiceListingID}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "51689",
									"path": [
										"listing",
										"listing",
										"GetService",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "{{ServiceListingID}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:08:29 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"serviceListing\": {\n        \"id\": \"648292600bdcf800013c91d0\",\n        \"sellerId\": \"64239b8df0a1190001c5ad0d\",\n        \"charge\": 0,\n        \"title\": \"Baker\",\n        \"description\": \"I provide online and home based baking sessions\",\n        \"serviceType\": 0,\n        \"locationType\": 1,\n        \"availability\": {\n            \"startDate\": \"2023-06-30T00:00:00Z\",\n            \"endDate\": \"2023-07-30T00:00:00Z\",\n            \"dayEntries\": [\n                {\n                    \"startTime\": \"\",\n                    \"endTime\": \"\",\n                    \"available\": false\n                },\n                {\n                    \"startTime\": \"\",\n                    \"endTime\": \"\",\n                    \"available\": false\n                },\n                {\n                    \"startTime\": \"\",\n                    \"endTime\": \"\",\n                    \"available\": false\n                },\n                {\n                    \"startTime\": \"\",\n                    \"endTime\": \"\",\n                    \"available\": false\n                },\n                {\n                    \"startTime\": \"\",\n                    \"endTime\": \"\",\n                    \"available\": false\n                },\n                {\n                    \"startTime\": \"\",\n                    \"endTime\": \"\",\n                    \"available\": false\n                },\n                {\n                    \"startTime\": \"10:30\",\n                    \"endTime\": \"12:30\",\n                    \"available\": true\n                }\n            ]\n        },\n        \"workSample\": null,\n        \"categoryId\": 8,\n        \"subcategoryId\": 6,\n        \"tags\": [\n            {\n                \"id\": \"Cake making\",\n                \"text\": \"Cake making\"\n            },\n            {\n                \"id\": \"Pastries\",\n                \"text\": \"Pastries\"\n            },\n            {\n                \"id\": \"Croissant\",\n                \"text\": \"Croissant\"\n            },\n            {\n                \"id\": \"Pies\",\n                \"text\": \"Pies\"\n            }\n        ],\n        \"comments\": null,\n        \"ratings\": null,\n        \"ratingAverages\": null,\n        \"ratingTotalsAndCounts\": {\n            \"communicationRatingsTotal\": 0,\n            \"communicationRatingsCount\": 0,\n            \"serviceRatingsTotal\": 0,\n            \"serviceRatingsCount\": 0,\n            \"recommendRatingsTotal\": 0,\n            \"recommendRatingsCount\": 0,\n            \"overallAverageRating\": 0,\n            \"overallTradesRatedCount\": 0\n        },\n        \"skillTrade\": [\n            {\n                \"id\": \"Cake making\",\n                \"text\": \"Cake making\"\n            },\n            {\n                \"id\": \"Pastries\",\n                \"text\": \"Pastries\"\n            },\n            {\n                \"id\": \"Croissant\",\n                \"text\": \"Croissant\"\n            },\n            {\n                \"id\": \"Pies\",\n                \"text\": \"Pies\"\n            }\n        ],\n        \"isTradable\": true,\n        \"isActive\": true,\n        \"createdOn\": \"2023-06-09T02:45:52.958Z\",\n        \"createdBy\": \"64239b8df0a1190001c5ad0d\",\n        \"updatedOn\": \"0001-01-01T00:00:00Z\",\n        \"updatedBy\": null,\n        \"isDeleted\": false\n    },\n    \"categoryTuple\": {\n        \"item1\": \"Fun & Lifestyle\",\n        \"item2\": \"Other\"\n    },\n    \"currentUserId\": \"6421088c61454600016793fe\",\n    \"comments\": null\n}"
						}
					]
				},
				{
					"name": "Get Balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Get Balance\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.balance).to.exist;\r",
									"        });\r",
									"    } else {\r",
									"        pm.test(\"Unable to Get Service\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.false;\r",
									"        });\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Get Balance because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "http://localhost:51689/listing/listing/getBalance"
					},
					"response": [
						{
							"name": "Positive Get Balance",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:51689/listing/listing/getBalance"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:10:02 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"balance\": 100\n}"
						}
					]
				},
				{
					"name": "Get Categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Get Categories\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.categories).to.be.an('array');\r",
									"        });\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Get Categories because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "http://localhost:51689/listing/listing/getCategories"
					},
					"response": [
						{
							"name": "Positive Get Categories",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:51689/listing/listing/getCategories"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:13:32 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"categories\": [\n        {\n            \"id\": \"5c62184640176bdbbbac98a5\",\n            \"value\": \"1\",\n            \"name\": \"Graphics & Design\",\n            \"subcategory\": [\n                {\n                    \"id\": null,\n                    \"value\": \"1\",\n                    \"name\": \"Logo Design\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"2\",\n                    \"name\": \"Book & Album covers\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"3\",\n                    \"name\": \"Flyers & Brochures\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"4\",\n                    \"name\": \"Web & Mobile Design\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"5\",\n                    \"name\": \"Search & Display Marketing\",\n                    \"isDeleted\": false\n                }\n            ],\n            \"isDeleted\": false\n        },\n        {\n            \"id\": \"5c62184640176bdbbbac98a6\",\n            \"value\": \"2\",\n            \"name\": \"Digital Marketing\",\n            \"subcategory\": [\n                {\n                    \"id\": null,\n                    \"value\": \"1\",\n                    \"name\": \"Social Media Marketing\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"2\",\n                    \"name\": \"Content Marketing\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"3\",\n                    \"name\": \"Video Marketing\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"4\",\n                    \"name\": \"Email Marketing\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"5\",\n                    \"name\": \"Search & Display Marketing\",\n                    \"isDeleted\": false\n                }\n            ],\n            \"isDeleted\": false\n        },\n        {\n            \"id\": \"5c62184640176bdbbbac98a7\",\n            \"value\": \"3\",\n            \"name\": \"Writing & Translation\",\n            \"subcategory\": [\n                {\n                    \"id\": null,\n                    \"value\": \"1\",\n                    \"name\": \"Resumes & Cover Letters\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"2\",\n                    \"name\": \"Proof Reading & Editing\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"3\",\n                    \"name\": \"Translation\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"4\",\n                    \"name\": \"Creative Writing\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"5\",\n                    \"name\": \"Business Copywriting\",\n                    \"isDeleted\": false\n                }\n            ],\n            \"isDeleted\": false\n        },\n        {\n            \"id\": \"5c62184640176bdbbbac98a8\",\n            \"value\": \"4\",\n            \"name\": \"Video & Animation\",\n            \"subcategory\": [\n                {\n                    \"id\": null,\n                    \"value\": \"1\",\n                    \"name\": \"Promotional Videos\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"2\",\n                    \"name\": \"Editing & Post Production\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"3\",\n                    \"name\": \"Lyric & Music Videos\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"4\",\n                    \"name\": \"Other\",\n                    \"isDeleted\": false\n                }\n            ],\n            \"isDeleted\": false\n        },\n        {\n            \"id\": \"5c62184640176bdbbbac98a9\",\n            \"value\": \"5\",\n            \"name\": \"Music & Audio\",\n            \"subcategory\": [\n                {\n                    \"id\": null,\n                    \"value\": \"1\",\n                    \"name\": \"Mixing & Mastering\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"2\",\n                    \"name\": \"Voice Over\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"3\",\n                    \"name\": \"Song Writers & Composers\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"4\",\n                    \"name\": \"Other\",\n                    \"isDeleted\": false\n                }\n            ],\n            \"isDeleted\": false\n        },\n        {\n            \"id\": \"5c62184640176bdbbbac98aa\",\n            \"value\": \"6\",\n            \"name\": \"Programming & Tech\",\n            \"subcategory\": [\n                {\n                    \"id\": null,\n                    \"value\": \"1\",\n                    \"name\": \"WordPress\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"2\",\n                    \"name\": \"Web & Mobile App\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"3\",\n                    \"name\": \"Data Analysis & Reports\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"4\",\n                    \"name\": \"QA\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"5\",\n                    \"name\": \"Databases\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"6\",\n                    \"name\": \"Other\",\n                    \"isDeleted\": false\n                }\n            ],\n            \"isDeleted\": false\n        },\n        {\n            \"id\": \"5c62184640176bdbbbac98ab\",\n            \"value\": \"7\",\n            \"name\": \"Business\",\n            \"subcategory\": [\n                {\n                    \"id\": null,\n                    \"value\": \"1\",\n                    \"name\": \"Business Tips\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"2\",\n                    \"name\": \"Presentations\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"3\",\n                    \"name\": \"Market Advice\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"4\",\n                    \"name\": \"Legal Consulting\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"5\",\n                    \"name\": \"Financial Consulting\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"6\",\n                    \"name\": \"Other\",\n                    \"isDeleted\": false\n                }\n            ],\n            \"isDeleted\": false\n        },\n        {\n            \"id\": \"5c62184640176bdbbbac98ac\",\n            \"value\": \"8\",\n            \"name\": \"Fun & Lifestyle\",\n            \"subcategory\": [\n                {\n                    \"id\": null,\n                    \"value\": \"1\",\n                    \"name\": \"Online Lessons\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"2\",\n                    \"name\": \"Relationship Advice\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"3\",\n                    \"name\": \"Astrology\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"4\",\n                    \"name\": \"Health, Nutrition & Fitness\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"5\",\n                    \"name\": \"Gaming\",\n                    \"isDeleted\": false\n                },\n                {\n                    \"id\": null,\n                    \"value\": \"6\",\n                    \"name\": \"Other\",\n                    \"isDeleted\": false\n                }\n            ],\n            \"isDeleted\": false\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Multiple Service Listing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Get Multiple Service Listing\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.data).to.be.an('array');\r",
									"            pm.expect(response.count).to.exist;\r",
									"        });\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 500) {\r",
									"     pm.test(\"Unable to Get Multiple Service Listings due to Internal Server Error\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Get Multiple Service Listings because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"limit\": 5,\r\n  \"offset\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:51689/listing/listing/getMultipleServiceListing"
					},
					"response": [
						{
							"name": "Positive Get Multiple Service Listing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"limit\": 5,\r\n  \"offset\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:51689/listing/listing/getMultipleServiceListing"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:18:10 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": \"65603c61ddcdfb00011c32a1\",\n            \"sellerId\": \"6421088c61454600016793fe\",\n            \"charge\": 0,\n            \"title\": \"Test Analyst\",\n            \"description\": \"Provide Selenium and API testing skills\",\n            \"categoryId\": 6,\n            \"category\": \"Programming & Tech\",\n            \"subcategoryId\": 4,\n            \"serviceType\": 0,\n            \"locationType\": 0,\n            \"availability\": {\n                \"startDate\": \"2023-09-18T00:00:00Z\",\n                \"endDate\": null,\n                \"dayEntries\": [\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"06:30\",\n                        \"endTime\": \"14:30\",\n                        \"available\": true\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    }\n                ]\n            },\n            \"isTradable\": true,\n            \"isActive\": true,\n            \"tags\": null,\n            \"skillTrade\": [\n                {\n                    \"id\": \"SQL\",\n                    \"text\": \"SQL\"\n                },\n                {\n                    \"id\": \"Java\",\n                    \"text\": \"Java\"\n                }\n            ],\n            \"worksample\": null,\n            \"createdOn\": \"2023-11-24T06:02:09.737Z\",\n            \"createdBy\": \"6421088c61454600016793fe\",\n            \"updatedOn\": \"0001-01-01T00:00:00Z\",\n            \"updatedBy\": null,\n            \"comments\": null,\n            \"ratingTotalsAndCounts\": null,\n            \"workSampleMainImg\": \"http://mars-listing-photo.s3.amazonaws.com/18a85a80-e30e-4a1a-9341-7b6859c20908default-image.jpg\",\n            \"isDeleted\": false\n        },\n        {\n            \"id\": \"6558647addcdfb00011c329b\",\n            \"sellerId\": \"6421088c61454600016793fe\",\n            \"charge\": 0,\n            \"title\": \"Test Analyst\",\n            \"description\": \"Provide Selenium and API testing skills\",\n            \"categoryId\": 6,\n            \"category\": \"Programming & Tech\",\n            \"subcategoryId\": 4,\n            \"serviceType\": 0,\n            \"locationType\": 0,\n            \"availability\": {\n                \"startDate\": \"2023-09-18T00:00:00Z\",\n                \"endDate\": null,\n                \"dayEntries\": [\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"06:30\",\n                        \"endTime\": \"14:30\",\n                        \"available\": true\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    }\n                ]\n            },\n            \"isTradable\": true,\n            \"isActive\": true,\n            \"tags\": null,\n            \"skillTrade\": [\n                {\n                    \"id\": \"SQL\",\n                    \"text\": \"SQL\"\n                },\n                {\n                    \"id\": \"Java\",\n                    \"text\": \"Java\"\n                }\n            ],\n            \"worksample\": null,\n            \"createdOn\": \"2023-11-18T07:15:06.683Z\",\n            \"createdBy\": \"6421088c61454600016793fe\",\n            \"updatedOn\": \"0001-01-01T00:00:00Z\",\n            \"updatedBy\": null,\n            \"comments\": null,\n            \"ratingTotalsAndCounts\": null,\n            \"workSampleMainImg\": \"http://mars-listing-photo.s3.amazonaws.com/18a85a80-e30e-4a1a-9341-7b6859c20908default-image.jpg\",\n            \"isDeleted\": false\n        },\n        {\n            \"id\": \"652b855209e1c00001f9754a\",\n            \"sellerId\": \"6421088c61454600016793fe\",\n            \"charge\": 0,\n            \"title\": \"Test Analyst\",\n            \"description\": \"Provide Selenium and API testing skills\",\n            \"categoryId\": 6,\n            \"category\": \"Programming & Tech\",\n            \"subcategoryId\": 4,\n            \"serviceType\": 0,\n            \"locationType\": 0,\n            \"availability\": {\n                \"startDate\": \"2023-09-18T00:00:00Z\",\n                \"endDate\": null,\n                \"dayEntries\": [\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"06:30\",\n                        \"endTime\": \"14:30\",\n                        \"available\": true\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    }\n                ]\n            },\n            \"isTradable\": true,\n            \"isActive\": true,\n            \"tags\": null,\n            \"skillTrade\": [\n                {\n                    \"id\": \"SQL\",\n                    \"text\": \"SQL\"\n                },\n                {\n                    \"id\": \"Java\",\n                    \"text\": \"Java\"\n                }\n            ],\n            \"worksample\": null,\n            \"createdOn\": \"2023-10-15T06:23:14.219Z\",\n            \"createdBy\": \"6421088c61454600016793fe\",\n            \"updatedOn\": \"0001-01-01T00:00:00Z\",\n            \"updatedBy\": null,\n            \"comments\": null,\n            \"ratingTotalsAndCounts\": null,\n            \"workSampleMainImg\": \"http://mars-listing-photo.s3.amazonaws.com/18a85a80-e30e-4a1a-9341-7b6859c20908default-image.jpg\",\n            \"isDeleted\": false\n        },\n        {\n            \"id\": \"652b844809e1c00001f97544\",\n            \"sellerId\": \"6421088c61454600016793fe\",\n            \"charge\": 0,\n            \"title\": \"Test Analyst\",\n            \"description\": \"Provide Selenium and API testing skills\",\n            \"categoryId\": 6,\n            \"category\": \"Programming & Tech\",\n            \"subcategoryId\": 4,\n            \"serviceType\": 0,\n            \"locationType\": 0,\n            \"availability\": {\n                \"startDate\": \"2023-09-18T00:00:00Z\",\n                \"endDate\": null,\n                \"dayEntries\": [\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"06:30\",\n                        \"endTime\": \"14:30\",\n                        \"available\": true\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    }\n                ]\n            },\n            \"isTradable\": true,\n            \"isActive\": true,\n            \"tags\": null,\n            \"skillTrade\": [\n                {\n                    \"id\": \"SQL\",\n                    \"text\": \"SQL\"\n                },\n                {\n                    \"id\": \"Java\",\n                    \"text\": \"Java\"\n                }\n            ],\n            \"worksample\": null,\n            \"createdOn\": \"2023-10-15T06:18:48.941Z\",\n            \"createdBy\": \"6421088c61454600016793fe\",\n            \"updatedOn\": \"0001-01-01T00:00:00Z\",\n            \"updatedBy\": null,\n            \"comments\": null,\n            \"ratingTotalsAndCounts\": null,\n            \"workSampleMainImg\": \"http://mars-listing-photo.s3.amazonaws.com/18a85a80-e30e-4a1a-9341-7b6859c20908default-image.jpg\",\n            \"isDeleted\": false\n        },\n        {\n            \"id\": \"652b843b09e1c00001f9753e\",\n            \"sellerId\": \"6421088c61454600016793fe\",\n            \"charge\": 0,\n            \"title\": \"Test Analyst\",\n            \"description\": \"Provide Selenium and API testing skills\",\n            \"categoryId\": 6,\n            \"category\": \"Programming & Tech\",\n            \"subcategoryId\": 4,\n            \"serviceType\": 0,\n            \"locationType\": 0,\n            \"availability\": {\n                \"startDate\": \"2023-09-18T00:00:00Z\",\n                \"endDate\": null,\n                \"dayEntries\": [\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"06:30\",\n                        \"endTime\": \"14:30\",\n                        \"available\": true\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    },\n                    {\n                        \"startTime\": \"\",\n                        \"endTime\": \"\",\n                        \"available\": false\n                    }\n                ]\n            },\n            \"isTradable\": true,\n            \"isActive\": true,\n            \"tags\": null,\n            \"skillTrade\": [\n                {\n                    \"id\": \"SQL\",\n                    \"text\": \"SQL\"\n                },\n                {\n                    \"id\": \"Java\",\n                    \"text\": \"Java\"\n                }\n            ],\n            \"worksample\": null,\n            \"createdOn\": \"2023-10-15T06:18:35.327Z\",\n            \"createdBy\": \"6421088c61454600016793fe\",\n            \"updatedOn\": \"0001-01-01T00:00:00Z\",\n            \"updatedBy\": null,\n            \"comments\": null,\n            \"ratingTotalsAndCounts\": null,\n            \"workSampleMainImg\": \"http://mars-listing-photo.s3.amazonaws.com/18a85a80-e30e-4a1a-9341-7b6859c20908default-image.jpg\",\n            \"isDeleted\": false\n        }\n    ],\n    \"count\": 13\n}"
						},
						{
							"name": "Negative Get Multiple Service Listing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"limit\": 5,\r\n  \"offset\": \"sss\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:51689/listing/listing/getMultipleServiceListing"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:25:31 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Get Sent Requests",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Get Sent Requests\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.data).to.be.an('array');\r",
									"        });\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Get Sent Requests because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "http://localhost:51689/listing/listing/getSentRequests"
					},
					"response": [
						{
							"name": "Positive Get Sent Requests",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:51689/listing/listing/getSentRequests"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:24:06 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": \"648275fe0bdcf800013c91c4\",\n            \"senderId\": \"6421088c61454600016793fe\",\n            \"senderName\": \"Saarah\",\n            \"recipientId\": \"64239b8df0a1190001c5ad0d\",\n            \"recipientName\": \"Jessica\",\n            \"listingId\": \"645e16e20bdcf800013c91a6\",\n            \"totalHours\": 0,\n            \"totalAmount\": 0,\n            \"status\": 4,\n            \"isViewed\": true,\n            \"isCompletedBySender\": true,\n            \"isCompletedBySeller\": false,\n            \"category\": null,\n            \"categoryId\": 6,\n            \"title\": \"Senior Test Analyst\",\n            \"message\": \"I am interested in trading my communication skills for your Performance testing skills\",\n            \"senderLastName\": null,\n            \"senderCity\": null,\n            \"senderCountry\": null,\n            \"createdOn\": \"0001-01-01T00:00:00\",\n            \"updatedOn\": \"0001-01-01T00:00:00\",\n            \"isTradable\": false\n        },\n        {\n            \"id\": \"64828f660bdcf800013c91ca\",\n            \"senderId\": \"6421088c61454600016793fe\",\n            \"senderName\": \"Saarah\",\n            \"recipientId\": \"64239b8df0a1190001c5ad0d\",\n            \"recipientName\": \"Jessica\",\n            \"listingId\": \"646af2c20bdcf800013c91b7\",\n            \"totalHours\": 0,\n            \"totalAmount\": 0,\n            \"status\": 2,\n            \"isViewed\": true,\n            \"isCompletedBySender\": false,\n            \"isCompletedBySeller\": false,\n            \"category\": null,\n            \"categoryId\": 6,\n            \"title\": \"Senior Test Analyst\",\n            \"message\": \"I am interested in trading email writing skills for you creating test cases skill\",\n            \"senderLastName\": null,\n            \"senderCity\": null,\n            \"senderCountry\": null,\n            \"createdOn\": \"0001-01-01T00:00:00\",\n            \"updatedOn\": \"0001-01-01T00:00:00\",\n            \"isTradable\": false\n        },\n        {\n            \"id\": \"64828fb10bdcf800013c91cc\",\n            \"senderId\": \"6421088c61454600016793fe\",\n            \"senderName\": \"Saarah\",\n            \"recipientId\": \"64239b8df0a1190001c5ad0d\",\n            \"recipientName\": \"Jessica\",\n            \"listingId\": \"646aef990bdcf800013c91b3\",\n            \"totalHours\": 0,\n            \"totalAmount\": 0,\n            \"status\": 1,\n            \"isViewed\": true,\n            \"isCompletedBySender\": false,\n            \"isCompletedBySeller\": false,\n            \"category\": null,\n            \"categoryId\": 6,\n            \"title\": \"Senior Test Analyst\",\n            \"message\": \"I am interested in trading email writing skills with your Performance testing skills\",\n            \"senderLastName\": null,\n            \"senderCity\": null,\n            \"senderCountry\": null,\n            \"createdOn\": \"0001-01-01T00:00:00\",\n            \"updatedOn\": \"0001-01-01T00:00:00\",\n            \"isTradable\": false\n        },\n        {\n            \"id\": \"6482912b0bdcf800013c91ce\",\n            \"senderId\": \"6421088c61454600016793fe\",\n            \"senderName\": \"Saarah\",\n            \"recipientId\": \"64239b8df0a1190001c5ad0d\",\n            \"recipientName\": \"Jessica\",\n            \"listingId\": \"646ae5e30bdcf800013c91b1\",\n            \"totalHours\": 0,\n            \"totalAmount\": 0,\n            \"status\": 2,\n            \"isViewed\": true,\n            \"isCompletedBySender\": false,\n            \"isCompletedBySeller\": false,\n            \"category\": null,\n            \"categoryId\": 6,\n            \"title\": \"Data Analyst\",\n            \"message\": \"I am interested in trading my Creative writing skill with your Data Analysis skill\",\n            \"senderLastName\": null,\n            \"senderCity\": null,\n            \"senderCountry\": null,\n            \"createdOn\": \"0001-01-01T00:00:00\",\n            \"updatedOn\": \"0001-01-01T00:00:00\",\n            \"isTradable\": false\n        },\n        {\n            \"id\": \"6482971a0bdcf800013c91d4\",\n            \"senderId\": \"6421088c61454600016793fe\",\n            \"senderName\": \"Saarah\",\n            \"recipientId\": \"64239b8df0a1190001c5ad0d\",\n            \"recipientName\": \"Jessica\",\n            \"listingId\": \"648293b60bdcf800013c91d1\",\n            \"totalHours\": 0,\n            \"totalAmount\": 0,\n            \"status\": 2,\n            \"isViewed\": true,\n            \"isCompletedBySender\": false,\n            \"isCompletedBySeller\": false,\n            \"category\": null,\n            \"categoryId\": 8,\n            \"title\": \"Interpersonal Communication\",\n            \"message\": \"I am interested in trading my Piano skills with your Soft skills\",\n            \"senderLastName\": null,\n            \"senderCity\": null,\n            \"senderCountry\": null,\n            \"createdOn\": \"0001-01-01T00:00:00\",\n            \"updatedOn\": \"0001-01-01T00:00:00\",\n            \"isTradable\": false\n        },\n        {\n            \"id\": \"6482976b0bdcf800013c91d6\",\n            \"senderId\": \"6421088c61454600016793fe\",\n            \"senderName\": \"Saarah\",\n            \"recipientId\": \"64239b8df0a1190001c5ad0d\",\n            \"recipientName\": \"Jessica\",\n            \"listingId\": \"648292600bdcf800013c91d0\",\n            \"totalHours\": 0,\n            \"totalAmount\": 0,\n            \"status\": 1,\n            \"isViewed\": true,\n            \"isCompletedBySender\": false,\n            \"isCompletedBySeller\": false,\n            \"category\": null,\n            \"categoryId\": 8,\n            \"title\": \"Baker\",\n            \"message\": \"I am interested in trading my Piano skills with your Cake making skills\",\n            \"senderLastName\": null,\n            \"senderCity\": null,\n            \"senderCountry\": null,\n            \"createdOn\": \"0001-01-01T00:00:00\",\n            \"updatedOn\": \"0001-01-01T00:00:00\",\n            \"isTradable\": false\n        },\n        {\n            \"id\": \"65260feea044c900017ee741\",\n            \"senderId\": \"6421088c61454600016793fe\",\n            \"senderName\": \"Saarah\",\n            \"recipientId\": \"64239b8df0a1190001c5ad0d\",\n            \"recipientName\": \"Jessica\",\n            \"listingId\": \"65177f13a044c900017ee3d0\",\n            \"totalHours\": 0,\n            \"totalAmount\": 0,\n            \"status\": 1,\n            \"isViewed\": true,\n            \"isCompletedBySender\": false,\n            \"isCompletedBySeller\": false,\n            \"category\": null,\n            \"categoryId\": 6,\n            \"title\": \"Test Analyst\",\n            \"message\": \"Test 2\",\n            \"senderLastName\": null,\n            \"senderCity\": null,\n            \"senderCountry\": null,\n            \"createdOn\": \"0001-01-01T00:00:00\",\n            \"updatedOn\": \"0001-01-01T00:00:00\",\n            \"isTradable\": false\n        },\n        {\n            \"id\": \"6526100fa044c900017ee743\",\n            \"senderId\": \"6421088c61454600016793fe\",\n            \"senderName\": \"Saarah\",\n            \"recipientId\": \"64239b8df0a1190001c5ad0d\",\n            \"recipientName\": \"Jessica\",\n            \"listingId\": \"65177f13a044c900017ee3d0\",\n            \"totalHours\": 0,\n            \"totalAmount\": 0,\n            \"status\": 0,\n            \"isViewed\": true,\n            \"isCompletedBySender\": false,\n            \"isCompletedBySeller\": false,\n            \"category\": null,\n            \"categoryId\": 6,\n            \"title\": \"Test Analyst\",\n            \"message\": \"Test 2\",\n            \"senderLastName\": null,\n            \"senderCity\": null,\n            \"senderCountry\": null,\n            \"createdOn\": \"0001-01-01T00:00:00\",\n            \"updatedOn\": \"0001-01-01T00:00:00\",\n            \"isTradable\": false\n        },\n        {\n            \"id\": \"652b7d2a09e1c00001f9752e\",\n            \"senderId\": \"6421088c61454600016793fe\",\n            \"senderName\": \"Saarah\",\n            \"recipientId\": \"64239b8df0a1190001c5ad0d\",\n            \"recipientName\": \"Jessica\",\n            \"listingId\": \"65177f13a044c900017ee3d0\",\n            \"totalHours\": 0,\n            \"totalAmount\": 0,\n            \"status\": 0,\n            \"isViewed\": true,\n            \"isCompletedBySender\": false,\n            \"isCompletedBySeller\": false,\n            \"category\": null,\n            \"categoryId\": 6,\n            \"title\": \"Test Analyst\",\n            \"message\": \"Test 2\",\n            \"senderLastName\": null,\n            \"senderCity\": null,\n            \"senderCountry\": null,\n            \"createdOn\": \"0001-01-01T00:00:00\",\n            \"updatedOn\": \"0001-01-01T00:00:00\",\n            \"isTradable\": false\n        },\n        {\n            \"id\": \"652b829f09e1c00001f97536\",\n            \"senderId\": \"6421088c61454600016793fe\",\n            \"senderName\": \"Saarah\",\n            \"recipientId\": \"64239b8df0a1190001c5ad0d\",\n            \"recipientName\": \"Jessica\",\n            \"listingId\": \"65177f13a044c900017ee3d0\",\n            \"totalHours\": 0,\n            \"totalAmount\": 0,\n            \"status\": 0,\n            \"isViewed\": false,\n            \"isCompletedBySender\": false,\n            \"isCompletedBySeller\": false,\n            \"category\": null,\n            \"categoryId\": 6,\n            \"title\": \"Test Analyst\",\n            \"message\": \"Test 2\",\n            \"senderLastName\": null,\n            \"senderCity\": null,\n            \"senderCountry\": null,\n            \"createdOn\": \"0001-01-01T00:00:00\",\n            \"updatedOn\": \"0001-01-01T00:00:00\",\n            \"isTradable\": false\n        },\n        {\n            \"id\": \"652b835d09e1c00001f9753c\",\n            \"senderId\": \"6421088c61454600016793fe\",\n            \"senderName\": \"Saarah\",\n            \"recipientId\": \"64239b8df0a1190001c5ad0d\",\n            \"recipientName\": \"Jessica\",\n            \"listingId\": \"65177f13a044c900017ee3d0\",\n            \"totalHours\": 0,\n            \"totalAmount\": 0,\n            \"status\": 0,\n            \"isViewed\": false,\n            \"isCompletedBySender\": false,\n            \"isCompletedBySeller\": false,\n            \"category\": null,\n            \"categoryId\": 6,\n            \"title\": \"Test Analyst\",\n            \"message\": \"Test 2\",\n            \"senderLastName\": null,\n            \"senderCity\": null,\n            \"senderCountry\": null,\n            \"createdOn\": \"0001-01-01T00:00:00\",\n            \"updatedOn\": \"0001-01-01T00:00:00\",\n            \"isTradable\": false\n        },\n        {\n            \"id\": \"652b843f09e1c00001f97542\",\n            \"senderId\": \"6421088c61454600016793fe\",\n            \"senderName\": \"Saarah\",\n            \"recipientId\": \"64239b8df0a1190001c5ad0d\",\n            \"recipientName\": \"Jessica\",\n            \"listingId\": \"65177f13a044c900017ee3d0\",\n            \"totalHours\": 0,\n            \"totalAmount\": 0,\n            \"status\": 0,\n            \"isViewed\": false,\n            \"isCompletedBySender\": false,\n            \"isCompletedBySeller\": false,\n            \"category\": null,\n            \"categoryId\": 6,\n            \"title\": \"Test Analyst\",\n            \"message\": \"Test 2\",\n            \"senderLastName\": null,\n            \"senderCity\": null,\n            \"senderCountry\": null,\n            \"createdOn\": \"0001-01-01T00:00:00\",\n            \"updatedOn\": \"0001-01-01T00:00:00\",\n            \"isTradable\": false\n        },\n        {\n            \"id\": \"652b844d09e1c00001f97548\",\n            \"senderId\": \"6421088c61454600016793fe\",\n            \"senderName\": \"Saarah\",\n            \"recipientId\": \"64239b8df0a1190001c5ad0d\",\n            \"recipientName\": \"Jessica\",\n            \"listingId\": \"65177f13a044c900017ee3d0\",\n            \"totalHours\": 0,\n            \"totalAmount\": 0,\n            \"status\": 0,\n            \"isViewed\": false,\n            \"isCompletedBySender\": false,\n            \"isCompletedBySeller\": false,\n            \"category\": null,\n            \"categoryId\": 6,\n            \"title\": \"Test Analyst\",\n            \"message\": \"Test 2\",\n            \"senderLastName\": null,\n            \"senderCity\": null,\n            \"senderCountry\": null,\n            \"createdOn\": \"0001-01-01T00:00:00\",\n            \"updatedOn\": \"0001-01-01T00:00:00\",\n            \"isTradable\": false\n        },\n        {\n            \"id\": \"652b855609e1c00001f9754e\",\n            \"senderId\": \"6421088c61454600016793fe\",\n            \"senderName\": \"Saarah\",\n            \"recipientId\": \"64239b8df0a1190001c5ad0d\",\n            \"recipientName\": \"Jessica\",\n            \"listingId\": \"65177f13a044c900017ee3d0\",\n            \"totalHours\": 0,\n            \"totalAmount\": 0,\n            \"status\": 0,\n            \"isViewed\": false,\n            \"isCompletedBySender\": false,\n            \"isCompletedBySeller\": false,\n            \"category\": null,\n            \"categoryId\": 6,\n            \"title\": \"Test Analyst\",\n            \"message\": \"Test 2\",\n            \"senderLastName\": null,\n            \"senderCity\": null,\n            \"senderCountry\": null,\n            \"createdOn\": \"0001-01-01T00:00:00\",\n            \"updatedOn\": \"0001-01-01T00:00:00\",\n            \"isTradable\": false\n        },\n        {\n            \"id\": \"6558647fddcdfb00011c329f\",\n            \"senderId\": \"6421088c61454600016793fe\",\n            \"senderName\": \"Saarah\",\n            \"recipientId\": \"64239b8df0a1190001c5ad0d\",\n            \"recipientName\": \"Jessica\",\n            \"listingId\": \"65177f13a044c900017ee3d0\",\n            \"totalHours\": 0,\n            \"totalAmount\": 0,\n            \"status\": 0,\n            \"isViewed\": false,\n            \"isCompletedBySender\": false,\n            \"isCompletedBySeller\": false,\n            \"category\": null,\n            \"categoryId\": 6,\n            \"title\": \"Test Analyst\",\n            \"message\": \"Test 2\",\n            \"senderLastName\": null,\n            \"senderCity\": null,\n            \"senderCountry\": null,\n            \"createdOn\": \"0001-01-01T00:00:00\",\n            \"updatedOn\": \"0001-01-01T00:00:00\",\n            \"isTradable\": false\n        },\n        {\n            \"id\": \"65603c66ddcdfb00011c32a5\",\n            \"senderId\": \"6421088c61454600016793fe\",\n            \"senderName\": \"Saarah\",\n            \"recipientId\": \"64239b8df0a1190001c5ad0d\",\n            \"recipientName\": \"Jessica\",\n            \"listingId\": \"65177f13a044c900017ee3d0\",\n            \"totalHours\": 0,\n            \"totalAmount\": 0,\n            \"status\": 0,\n            \"isViewed\": false,\n            \"isCompletedBySender\": false,\n            \"isCompletedBySeller\": false,\n            \"category\": null,\n            \"categoryId\": 6,\n            \"title\": \"Test Analyst\",\n            \"message\": \"Test 2\",\n            \"senderLastName\": null,\n            \"senderCity\": null,\n            \"senderCountry\": null,\n            \"createdOn\": \"0001-01-01T00:00:00\",\n            \"updatedOn\": \"0001-01-01T00:00:00\",\n            \"isTradable\": false\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Trade Requests",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Get Trade Requests\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.data).to.be.an('array');\r",
									"            pm.expect(response.totalCount).to.exist;\r",
									"        });\r",
									"    } else {\r",
									"        pm.test(\"Unable to Get Trade Requests\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.false;\r",
									"        });\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Get Trade Requests because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"direction\": \"descending\",\r\n  \"limit\": 5,\r\n  \"offset\": 0,\r\n  \"sortBy\": \"createdOn\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:51689/listing/listing/getTradeRequests"
					},
					"response": [
						{
							"name": "Positive Get Trade Requests",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"direction\": \"descending\",\r\n  \"limit\": 5,\r\n  \"offset\": 0,\r\n  \"sortBy\": \"createdOn\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:51689/listing/listing/getTradeRequests"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:27:17 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": \"65260f69a044c900017ee734\",\n            \"senderId\": \"64239b8df0a1190001c5ad0d\",\n            \"senderName\": \"Jessica\",\n            \"recipientId\": \"6421088c61454600016793fe\",\n            \"recipientName\": \"Saarah\",\n            \"listingId\": \"648275ab0bdcf800013c91c3\",\n            \"totalHours\": 0,\n            \"totalAmount\": 0,\n            \"status\": 1,\n            \"isViewed\": true,\n            \"isCompletedBySender\": false,\n            \"isCompletedBySeller\": false,\n            \"category\": \"Writing & Translation\",\n            \"categoryId\": 0,\n            \"title\": \"I provide written communication \",\n            \"message\": \"Test 1\",\n            \"senderLastName\": \"Smith\",\n            \"senderCity\": null,\n            \"senderCountry\": null,\n            \"createdOn\": \"2023-10-11T02:58:49.617Z\",\n            \"updatedOn\": \"2023-10-15T05:53:13.508Z\",\n            \"isTradable\": true\n        }\n    ],\n    \"totalCount\": 1\n}"
						},
						{
							"name": "Negative Get Trade Requests",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"direction\": \"descending\",\r\n  \"limit\": 5,\r\n  \"offset\": \"TEST\",\r\n  \"sortBy\": \"TEST\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:51689/listing/listing/getTradeRequests"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:28:58 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Object reference not set to an instance of an object.\"\n}"
						},
						{
							"name": "Negative Get Trade Requests",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"direction\": \"TEST\",\r\n  \"limit\": \"TEST\",\r\n  \"offset\": \"TEST\",\r\n  \"sortBy\": \"createdOn\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:51689/listing/listing/getTradeRequests"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:29:27 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Object reference not set to an instance of an object.\"\n}"
						}
					]
				},
				{
					"name": "Search Listings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Search Listings\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.data).to.be.an('array');\r",
									"            pm.expect(response.totalCount).to.exist;\r",
									"        });\r",
									"    } else {\r",
									"        pm.test(\"Unable to Search Listings\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.false;\r",
									"        });\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 500) {\r",
									"     pm.test(\"Unable to Search Listings because of an Internal Server Error\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Search Listings because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"sortPagination\": {\r\n    \"limit\": 9,\r\n    \"offset\": 0\r\n  },\r\n  \"terms\": {\r\n    \"categoryIndex\": 1,\r\n    \"searchString\": \"\",\r\n    \"subcategoryIndex\": null,\r\n    \"uId\": null\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:51689/listing/listing/searchListings"
					},
					"response": [
						{
							"name": "Negative Search Listings",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:51689/listing/listing/searchListings"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:31:04 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "Positive Search Listings",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"sortPagination\": {\r\n    \"limit\": 9,\r\n    \"offset\": 0\r\n  },\r\n  \"terms\": {\r\n    \"categoryIndex\": 1,\r\n    \"searchString\": \"\",\r\n    \"subcategoryIndex\": null,\r\n    \"uId\": null\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:51689/listing/listing/searchListings"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:31:17 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": \"5c6218c5c38cb200054f12c3\",\n            \"sellerId\": \"5c621663bea4490005ebe9d2\",\n            \"sellerName\": \"Priyanka Singh\",\n            \"sellerFirstName\": null,\n            \"sellerLastName\": null,\n            \"profilePictureId\": null,\n            \"samplePictureId\": null,\n            \"photoSrc\": null,\n            \"samplePhotoSrc\": \"http://mars-listing-photo.s3.amazonaws.com/18a85a80-e30e-4a1a-9341-7b6859c20908default-image.jpg\",\n            \"charge\": 0,\n            \"title\": \"I design beautiful logos\",\n            \"description\": \"I design beautiful logos\",\n            \"categoryId\": 1,\n            \"subcategoryId\": 1,\n            \"serviceType\": 1,\n            \"isTradable\": true,\n            \"skillTrade\": [\n                {\n                    \"id\": \"Sketches\",\n                    \"text\": \"Sketches\"\n                }\n            ],\n            \"locationType\": 1,\n            \"ratings\": null\n        },\n        {\n            \"id\": \"5c6235c0c38cb200054f12c4\",\n            \"sellerId\": \"5c5f42f4bea4490005ebe9cd\",\n            \"sellerName\": \"xxx yyy\",\n            \"sellerFirstName\": null,\n            \"sellerLastName\": null,\n            \"profilePictureId\": null,\n            \"samplePictureId\": \"c4eb5baa-e182-4cf6-b752-6f38a1c23af2space with so many    beautiful stars.png\",\n            \"photoSrc\": null,\n            \"samplePhotoSrc\": \"http://mars-listing-photo.s3.amazonaws.com/c4eb5baa-e182-4cf6-b752-6f38a1c23af2space with so many    beautiful stars.png\",\n            \"charge\": 0,\n            \"title\": \"website designer\",\n            \"description\": \"design website, banners, concepts for business\",\n            \"categoryId\": 1,\n            \"subcategoryId\": 1,\n            \"serviceType\": 1,\n            \"isTradable\": true,\n            \"skillTrade\": [\n                {\n                    \"id\": \"log\",\n                    \"text\": \"log\"\n                }\n            ],\n            \"locationType\": 1,\n            \"ratings\": null\n        },\n        {\n            \"id\": \"5c635e31c38cb200054f12c6\",\n            \"sellerId\": \"5c5f42f4bea4490005ebe9cd\",\n            \"sellerName\": \"xxx yyy\",\n            \"sellerFirstName\": null,\n            \"sellerLastName\": null,\n            \"profilePictureId\": null,\n            \"samplePictureId\": null,\n            \"photoSrc\": null,\n            \"samplePhotoSrc\": \"http://mars-listing-photo.s3.amazonaws.com/18a85a80-e30e-4a1a-9341-7b6859c20908default-image.jpg\",\n            \"charge\": 0,\n            \"title\": \"Designing\",\n            \"description\": \"Logo, banner, pamplets design\",\n            \"categoryId\": 1,\n            \"subcategoryId\": 1,\n            \"serviceType\": 1,\n            \"isTradable\": true,\n            \"skillTrade\": [\n                {\n                    \"id\": \"skill\",\n                    \"text\": \"skill\"\n                }\n            ],\n            \"locationType\": 0,\n            \"ratings\": null\n        },\n        {\n            \"id\": \"5c636207c38cb200054f12c7\",\n            \"sellerId\": \"5c5f42f4bea4490005ebe9cd\",\n            \"sellerName\": \"xxx yyy\",\n            \"sellerFirstName\": null,\n            \"sellerLastName\": null,\n            \"profilePictureId\": null,\n            \"samplePictureId\": null,\n            \"photoSrc\": null,\n            \"samplePhotoSrc\": \"http://mars-listing-photo.s3.amazonaws.com/18a85a80-e30e-4a1a-9341-7b6859c20908default-image.jpg\",\n            \"charge\": 10,\n            \"title\": \"Designing\",\n            \"description\": \"Logo, banner, pamplets design\",\n            \"categoryId\": 1,\n            \"subcategoryId\": 1,\n            \"serviceType\": 1,\n            \"isTradable\": false,\n            \"skillTrade\": [],\n            \"locationType\": 0,\n            \"ratings\": null\n        },\n        {\n            \"id\": \"5c6cf4e0d67ea40005a3507b\",\n            \"sellerId\": \"5c639b60bea4490005ebe9d7\",\n            \"sellerName\": \"MVP Studio\",\n            \"sellerFirstName\": null,\n            \"sellerLastName\": null,\n            \"profilePictureId\": null,\n            \"samplePictureId\": \"72c5c4e3-928f-4ebc-9b78-9760df82e854Sample Work.docx\",\n            \"photoSrc\": null,\n            \"samplePhotoSrc\": \"http://mars-listing-photo.s3.amazonaws.com/72c5c4e3-928f-4ebc-9b78-9760df82e854Sample Work.docx\",\n            \"charge\": 0,\n            \"title\": \"Testing DatePicker\",\n            \"description\": \"I am a Selenium Expert. Would love to share my knowledge.\",\n            \"categoryId\": 1,\n            \"subcategoryId\": 2,\n            \"serviceType\": 0,\n            \"isTradable\": true,\n            \"skillTrade\": [\n                {\n                    \"id\": \"API\",\n                    \"text\": \"API\"\n                }\n            ],\n            \"locationType\": 1,\n            \"ratings\": null\n        },\n        {\n            \"id\": \"5c6e4253ceb07600057a96b4\",\n            \"sellerId\": \"5c639b60bea4490005ebe9d7\",\n            \"sellerName\": \"MVP Studio\",\n            \"sellerFirstName\": null,\n            \"sellerLastName\": null,\n            \"profilePictureId\": null,\n            \"samplePictureId\": \"336292c7-e8af-4767-ba35-55ae337ba11aSample Work.docx\",\n            \"photoSrc\": null,\n            \"samplePhotoSrc\": \"http://mars-listing-photo.s3.amazonaws.com/336292c7-e8af-4767-ba35-55ae337ba11aSample Work.docx\",\n            \"charge\": 0,\n            \"title\": \"Testing DatePicker\",\n            \"description\": \"I am a Selenium Expert. Would love to share my knowledge.\",\n            \"categoryId\": 1,\n            \"subcategoryId\": 2,\n            \"serviceType\": 0,\n            \"isTradable\": true,\n            \"skillTrade\": [\n                {\n                    \"id\": \"API\",\n                    \"text\": \"API\"\n                }\n            ],\n            \"locationType\": 1,\n            \"ratings\": null\n        },\n        {\n            \"id\": \"5c6f3aaad67ea40005a35088\",\n            \"sellerId\": \"5c639b60bea4490005ebe9d7\",\n            \"sellerName\": \"MVP Studio\",\n            \"sellerFirstName\": null,\n            \"sellerLastName\": null,\n            \"profilePictureId\": null,\n            \"samplePictureId\": \"27bdf182-b953-47c6-8fa5-42047009c692Sample Work.docx\",\n            \"photoSrc\": null,\n            \"samplePhotoSrc\": \"http://mars-listing-photo.s3.amazonaws.com/27bdf182-b953-47c6-8fa5-42047009c692Sample Work.docx\",\n            \"charge\": 0,\n            \"title\": \"Testing DatePicker\",\n            \"description\": \"I am a Selenium Expert. Would love to share my knowledge.\",\n            \"categoryId\": 1,\n            \"subcategoryId\": 2,\n            \"serviceType\": 0,\n            \"isTradable\": true,\n            \"skillTrade\": [\n                {\n                    \"id\": \"API\",\n                    \"text\": \"API\"\n                }\n            ],\n            \"locationType\": 1,\n            \"ratings\": null\n        },\n        {\n            \"id\": \"5c6f420dceb07600057a96b8\",\n            \"sellerId\": \"5c639b60bea4490005ebe9d7\",\n            \"sellerName\": \"MVP Studio\",\n            \"sellerFirstName\": null,\n            \"sellerLastName\": null,\n            \"profilePictureId\": null,\n            \"samplePictureId\": \"d2a9f432-5b07-4d1b-8841-29e9d68b59d1Sample Work.docx\",\n            \"photoSrc\": null,\n            \"samplePhotoSrc\": \"http://mars-listing-photo.s3.amazonaws.com/d2a9f432-5b07-4d1b-8841-29e9d68b59d1Sample Work.docx\",\n            \"charge\": 0,\n            \"title\": \"Testing DatePicker\",\n            \"description\": \"I am a Selenium Expert. Would love to share my knowledge.\",\n            \"categoryId\": 1,\n            \"subcategoryId\": 2,\n            \"serviceType\": 0,\n            \"isTradable\": true,\n            \"skillTrade\": [\n                {\n                    \"id\": \"API\",\n                    \"text\": \"API\"\n                }\n            ],\n            \"locationType\": 1,\n            \"ratings\": null\n        },\n        {\n            \"id\": \"5c73611eceb07600057a96c3\",\n            \"sellerId\": \"5c639b60bea4490005ebe9d7\",\n            \"sellerName\": \"MVP Studio\",\n            \"sellerFirstName\": null,\n            \"sellerLastName\": null,\n            \"profilePictureId\": null,\n            \"samplePictureId\": \"fe73539b-7ae2-4c9b-be5d-d397cb4f0358Sample Work.docx\",\n            \"photoSrc\": null,\n            \"samplePhotoSrc\": \"http://mars-listing-photo.s3.amazonaws.com/fe73539b-7ae2-4c9b-be5d-d397cb4f0358Sample Work.docx\",\n            \"charge\": 0,\n            \"title\": \"Testing DatePicker\",\n            \"description\": \"I am a Selenium Expert. Would love to share my knowledge.\",\n            \"categoryId\": 1,\n            \"subcategoryId\": 2,\n            \"serviceType\": 0,\n            \"isTradable\": true,\n            \"skillTrade\": [\n                {\n                    \"id\": \"API\",\n                    \"text\": \"API\"\n                }\n            ],\n            \"locationType\": 1,\n            \"ratings\": null\n        }\n    ],\n    \"totalCount\": 631\n}"
						}
					]
				},
				{
					"name": "Send Trade Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Send Trade Request\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.id).to.exist;\r",
									"        });\r",
									"    } else {\r",
									"        pm.test(\"Unable to Send Trade Request\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.false;\r",
									"        });\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 500) {\r",
									"     pm.test(\"Unable to Send Trade Request because of an Internal Server Error\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Send Trade Request because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ListingId\": \"65177f13a044c900017ee3d0\",\r\n  \"Message\": \"Test 2\",\r\n  \"TotalHours\": 0,\r\n  \"TotalAmount\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:51689/listing/listing/sendTradeRequest"
					},
					"response": [
						{
							"name": "Positive Send Trade Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ListingId\": \"65177f13a044c900017ee3d0\",\r\n  \"Message\": \"Test 2\",\r\n  \"TotalHours\": 0,\r\n  \"TotalAmount\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:51689/listing/listing/sendTradeRequest"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:32:40 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"id\": \"6562f499ddcdfb00011c32c1\"\n}"
						},
						{
							"name": "Negative Send Trade Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ListingId\": \"TESTSET\",\r\n  \"Message\": \"Test 2\",\r\n  \"TotalHours\": 0,\r\n  \"TotalAmount\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:51689/listing/listing/sendTradeRequest"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:32:56 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Toggles Active",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Send Trade Request\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.active).to.be.true;\r",
									"        });\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 500) {\r",
									"     pm.test(\"Unable to Send Trade Request because of an Internal Server Error\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Send Trade Request because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\"6525eea3a044c900017ee728\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:51689/listing/listing/toggleIsActive"
					},
					"response": [
						{
							"name": "Positive Toggles Active",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"6525eea3a044c900017ee728\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:51689/listing/listing/toggleIsActive"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:34:24 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"active\": false\n}"
						},
						{
							"name": "Negative Toggles Active",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:51689/listing/listing/toggleIsActive"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:34:34 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "Negative Toggles Active",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"TET\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:51689/listing/listing/toggleIsActive"
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 07:34:43 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Content-Length",
									"value": "0"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Updated Received Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Get Notifications\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.userNotifications).to.be.an('array');\r",
									"            pm.expect(response.totalCount).to.exist;\r",
									"        });\r",
									"    }\r",
									"}\r",
									"\r",
									"if (statusCode == 404) {\r",
									"     pm.test(\"Unable to Update Received because the Received Request could not be found\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}\r",
									"\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Update Received because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"Id\": \"648275ab0bdcf800013c91c3\",\r\n  \"Status\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:51689/listing/listing/updatedReceivedRequest"
					},
					"response": []
				}
			]
		},
		{
			"name": "Profile endpoints",
			"item": [
				{
					"name": "Add Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    pm.test(\"Successfully Update Profile Description\", function () {\r",
									"        var response = pm.response.json();\r",
									"        pm.response.to.have.status(200);\r",
									"        pm.expect(response.message).to.equal(\"Description Updated Successfully\");\r",
									"        pm.expect(response.success).to.be.true;\r",
									"    });\r",
									"}\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Add Info because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"description\": \"test the description\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:60190/profile/profile/addInfo"
					},
					"response": [
						{
							"name": "Positive Add Info",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"description\": \"test the description\",\r\n  \"personId\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/addInfo"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 24 Nov 2023 05:24:17 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Description Updated Successfully\"\n}"
						}
					]
				},
				{
					"name": "Get Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    pm.test(\"Successfully Get Profile Information\", function () {\r",
									"        var response = pm.response.json();\r",
									"        pm.response.to.have.status(200);\r",
									"        pm.expect(response.username).to.not.be.empty;\r",
									"        pm.expect(response.isDeactivated).to.exist;\r",
									"    });\r",
									"}\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to get User Profile because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "http://localhost:60190/profile/profile/getProfile"
					},
					"response": [
						{
							"name": "Positive Get Profile Information",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:60190/profile/profile/getProfile"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 18 Nov 2023 07:19:31 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"username\": \"Saarah\",\n    \"isDeactivated\": false\n}"
						}
					]
				},
				{
					"name": "Get Profile Photo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    pm.test(\"Successfully Get Profile Photo\", function () {\r",
									"        var response = pm.response.json();\r",
									"        pm.response.to.have.status(200);\r",
									"        pm.expect(response.myPhotoUrl).to.not.be.empty;\r",
									"        pm.expect(response.otherPhotoUrl).to.not.be.empty;\r",
									"        pm.expect(response.success).to.be.true;\r",
									"    });\r",
									"}\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Get Profile Photo because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "http://localhost:60190/profile/profile/getProfilePhoto"
					},
					"response": [
						{
							"name": "Positive Get Profile Photo",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:60190/profile/profile/getProfilePhoto"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 24 Nov 2023 05:28:34 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"myPhotoUrl\": \"http://mars-user-profile.s3.amazonaws.com/1a1de2d8-f77d-4ff6-bb4e-52d14477ae82no-image.png\",\n    \"otherPhotoUrl\": \"http://mars-user-profile.s3.amazonaws.com/1a1de2d8-f77d-4ff6-bb4e-52d14477ae82no-image.png\"\n}"
						}
					]
				},
				{
					"name": "Get Seller Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Get Seller Details\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response).to.have.keys('success', 'userName', 'description', 'averageRating', 'ratingsCount', 'country', 'createdOn');\r",
									"        });\r",
									"    } else {\r",
									"        pm.test(\"Unable to get seller details because UserID was not present\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.false;\r",
									"        });\r",
									"    }\r",
									"}\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Get Seller Details because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:60190/profile/profile/getSellerDetails?uid={{UserID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"profile",
								"profile",
								"getSellerDetails"
							],
							"query": [
								{
									"key": "uid",
									"value": "{{UserID}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Positive Get Seller Details",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:60190/profile/profile/getSellerDetails?uid={{UserID}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "60190",
									"path": [
										"profile",
										"profile",
										"getSellerDetails"
									],
									"query": [
										{
											"key": "uid",
											"value": "{{UserID}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 24 Nov 2023 05:41:17 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"userName\": \"Vindya\",\n    \"description\": null,\n    \"averageRating\": 0,\n    \"ratingsCount\": 0,\n    \"country\": \"\",\n    \"createdOn\": \"2019-02-10T05:35:56.569Z\"\n}"
						}
					]
				},
				{
					"name": "Is User Authenticated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    pm.test(\"Successfully Get The List of Educations\", function () {\r",
									"        var response = pm.response.json();\r",
									"        pm.response.to.have.status(200);\r",
									"        pm.expect(response.isAuthenticated).to.be.true;\r",
									"        pm.expect(response).to.have.keys('isAuthenticated', 'username');\r",
									"    });\r",
									"}\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"401 when User is not authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "http://localhost:60190/profile/profile/isUserAuthenticated"
					},
					"response": [
						{
							"name": "Positive Is User Authenticated",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:60190/profile/profile/isUserAuthenticated"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 24 Nov 2023 05:44:04 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"isAuthenticated\": true,\n    \"username\": \"Saarah\"\n}"
						}
					]
				},
				{
					"name": "Update Availability",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Updated Availability\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.message).to.equal(\"Availability Updated Successfully\");\r",
									"        });\r",
									"    } else {\r",
									"        pm.test(\"Unable to Update Availability\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.false;\r",
									"            pm.expect(response.message).to.equal(\"Error updating Availability\");\r",
									"        });\r",
									"    }\r",
									"}\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Update Availability because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"AvailabilityType\": \"@#Q#@\",\r\n  \"AvailableHours\": \"$$#$Q\",\r\n  \"EarnTarget\": \"HHH\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:60190/profile/profile/updateAvailability"
					},
					"response": [
						{
							"name": "Positive Update Availability",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"AvailabilityType\": \"1\",\r\n  \"AvailableHours\": \"200\",\r\n  \"EarnTarget\": \"150\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/updateAvailability"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 24 Nov 2023 05:51:41 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Availability Updated Successfully\"\n}"
						},
						{
							"name": "Negative Update Availability",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"AvailabilityType\": \"@#Q#@\",\r\n  \"AvailableHours\": \"$$#$Q\",\r\n  \"EarnTarget\": \"HHH\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/updateAvailability"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 24 Nov 2023 05:52:10 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Error updating Availability\"\n}"
						}
					]
				},
				{
					"name": "Update First And Last Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    pm.test(\"Successfully update First and Last Name\", function () {\r",
									"        var response = pm.response.json();\r",
									"        pm.response.to.have.status(200);\r",
									"        pm.expect(response.success).to.be.true;\r",
									"        pm.expect(response.message).to.equal(\"Firstname and Lastname Changed\");\r",
									"    });\r",
									"}\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to get User Profile because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstName\": \"Saarah\",\r\n  \"lastName\": \"Iqbal\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:60190/profile/profile/updateFirstAndLastName"
					},
					"response": [
						{
							"name": "Update Empty First And Last Name",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"firstName\": \"\",\r\n  \"lastName\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/updateFirstAndLastName"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 15 Oct 2023 04:51:51 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Firstname and Lastname Changed\"\n}"
						},
						{
							"name": "Update First And Last Name with Symbols and Numbers",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"firstName\": \"@!#@%#$^\",\r\n  \"lastName\": \"456456\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/updateFirstAndLastName"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 15 Oct 2023 04:53:09 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Firstname and Lastname Changed\"\n}"
						},
						{
							"name": "Postive Update First And Last Name",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"firstName\": \"Saarah\",\r\n  \"lastName\": \"Iqbal\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/updateFirstAndLastName"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 24 Nov 2023 05:46:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Firstname and Lastname Changed\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Notification endpoints",
			"item": [
				{
					"name": "Get New Notification Count",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Get New Notification Count\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.noOfNotification).to.exist;\r",
									"            pm.expect(response.noOfMessages).to.exist;\r",
									"        });\r",
									"    }\r",
									"}\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Get Notification Count because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "http://localhost:60190/notification/notification/getNewNotificationCount"
					},
					"response": [
						{
							"name": "Positive Get New Notification Count",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:60190/notification/notification/getNewNotificationCount"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 06:34:54 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"noOfNotification\": 0,\n    \"noOfMessages\": 0\n}"
						}
					]
				},
				{
					"name": "Get Notification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Get Notifications\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.userNotifications).to.be.an('array');\r",
									"            pm.expect(response.totalCount).to.exist;\r",
									"        });\r",
									"    }\r",
									"}\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Get Notifications because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:60190/notification/notification/getNotification?numberOfNotifications=5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"notification",
								"notification",
								"getNotification"
							],
							"query": [
								{
									"key": "numberOfNotifications",
									"value": "5"
								}
							]
						}
					},
					"response": [
						{
							"name": "Positive Get Notification",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:60190/notification/notification/getNotification?numberOfNotifications=5",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "60190",
									"path": [
										"notification",
										"notification",
										"getNotification"
									],
									"query": [
										{
											"key": "numberOfNotifications",
											"value": "5"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 06:38:10 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"userNotifications\": [\n        {\n            \"id\": \"652b7e6309e1c00001f97531\",\n            \"name\": \"Service Request\",\n            \"url\": \"/Home/SentRequest\",\n            \"message\": \"JessicaSmith accepted your skill trade request.\",\n            \"isViewed\": true,\n            \"updatedOn\": \"2023-10-15T05:53:39.606Z\",\n            \"notificationType\": 0,\n            \"icon\": \"tasks icon\"\n        },\n        {\n            \"id\": \"64a14aa31f14ab000171d80b\",\n            \"name\": \"Service Request\",\n            \"url\": \"/Home/SentRequest\",\n            \"message\": \"JessicaSmith accepted your skill trade request.\",\n            \"isViewed\": true,\n            \"updatedOn\": \"2023-07-02T10:00:03.236Z\",\n            \"notificationType\": 0,\n            \"icon\": \"tasks icon\"\n        },\n        {\n            \"id\": \"64a14aa21f14ab000171d80a\",\n            \"name\": \"Service Request\",\n            \"url\": \"/Home/SentRequest\",\n            \"message\": \"JessicaSmith accepted your skill trade request.\",\n            \"isViewed\": true,\n            \"updatedOn\": \"2023-07-02T10:00:02.231Z\",\n            \"notificationType\": 0,\n            \"icon\": \"tasks icon\"\n        },\n        {\n            \"id\": \"64a14a951f14ab000171d809\",\n            \"name\": \"Service Request\",\n            \"url\": \"/Home/SentRequest\",\n            \"message\": \"JessicaSmith declined your skill trade request please contact back\",\n            \"isViewed\": true,\n            \"updatedOn\": \"2023-07-02T09:59:49.439Z\",\n            \"notificationType\": 0,\n            \"icon\": \"tasks icon\"\n        },\n        {\n            \"id\": \"64a14a901f14ab000171d808\",\n            \"name\": \"Service Request\",\n            \"url\": \"/Home/SentRequest\",\n            \"message\": \"JessicaSmith accepted your skill trade request.\",\n            \"isViewed\": true,\n            \"updatedOn\": \"2023-07-02T09:59:44.466Z\",\n            \"notificationType\": 0,\n            \"icon\": \"tasks icon\"\n        }\n    ],\n    \"totalCount\": 24\n}"
						}
					]
				},
				{
					"name": "Load More Notification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Load More Notifications\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.userNotifications).to.be.an('array');\r",
									"            pm.expect(response.totalCount).to.exist;\r",
									"        });\r",
									"    }\r",
									"}\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Load More Notifications because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:60190/notification/notification/getNotification/?loadMore=10&offSet=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "60190",
							"path": [
								"notification",
								"notification",
								"getNotification",
								""
							],
							"query": [
								{
									"key": "loadMore",
									"value": "10"
								},
								{
									"key": "offSet",
									"value": "10"
								}
							]
						}
					},
					"response": [
						{
							"name": "Positive Load More Notification",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:60190/notification/notification/getNotification/?loadMore=10&offSet=10",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "60190",
									"path": [
										"notification",
										"notification",
										"getNotification",
										""
									],
									"query": [
										{
											"key": "loadMore",
											"value": "10"
										},
										{
											"key": "offSet",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 06:39:40 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"userNotifications\": [\n        {\n            \"id\": \"64a149ce1f14ab000171d802\",\n            \"name\": \"Service Request\",\n            \"url\": \"/Home/SentRequest\",\n            \"message\": \"JessicaSmith accepted your skill trade request.\",\n            \"isViewed\": true,\n            \"updatedOn\": \"2023-07-02T09:56:30.714Z\",\n            \"notificationType\": 0,\n            \"icon\": \"tasks icon\"\n        },\n        {\n            \"id\": \"64a149c01f14ab000171d801\",\n            \"name\": \"Service Request\",\n            \"url\": \"/Home/SentRequest\",\n            \"message\": \"JessicaSmith accepted your skill trade request.\",\n            \"isViewed\": true,\n            \"updatedOn\": \"2023-07-02T09:56:16.73Z\",\n            \"notificationType\": 0,\n            \"icon\": \"tasks icon\"\n        },\n        {\n            \"id\": \"64a149b31f14ab000171d800\",\n            \"name\": \"Service Request\",\n            \"url\": \"/Home/SentRequest\",\n            \"message\": \"JessicaSmith accepted your skill trade request.\",\n            \"isViewed\": true,\n            \"updatedOn\": \"2023-07-02T09:56:03.717Z\",\n            \"notificationType\": 0,\n            \"icon\": \"tasks icon\"\n        },\n        {\n            \"id\": \"64a149951f14ab000171d7ff\",\n            \"name\": \"Service Request\",\n            \"url\": \"/Home/SentRequest\",\n            \"message\": \"JessicaSmith accepted your skill trade request.\",\n            \"isViewed\": true,\n            \"updatedOn\": \"2023-07-02T09:55:33.967Z\",\n            \"notificationType\": 0,\n            \"icon\": \"tasks icon\"\n        },\n        {\n            \"id\": \"6482a0b00bdcf800013c91dd\",\n            \"name\": \"Service Request\",\n            \"url\": \"/Home/SentRequest\",\n            \"message\": \"JessicaSmith accepted your skill trade request.\",\n            \"isViewed\": true,\n            \"updatedOn\": \"2023-06-09T03:46:56.501Z\",\n            \"notificationType\": 0,\n            \"icon\": \"tasks icon\"\n        },\n        {\n            \"id\": \"64829f300bdcf800013c91dc\",\n            \"name\": \"Service Request\",\n            \"url\": \"/Home/SentRequest\",\n            \"message\": \"JessicaSmith declined your skill trade request please contact back\",\n            \"isViewed\": true,\n            \"updatedOn\": \"2023-06-09T03:40:32.256Z\",\n            \"notificationType\": 0,\n            \"icon\": \"tasks icon\"\n        },\n        {\n            \"id\": \"64829e960bdcf800013c91db\",\n            \"name\": \"Service Request\",\n            \"url\": \"/Home/SentRequest\",\n            \"message\": \"JessicaSmith accepted your skill trade request.\",\n            \"isViewed\": true,\n            \"updatedOn\": \"2023-06-09T03:37:58.619Z\",\n            \"notificationType\": 0,\n            \"icon\": \"tasks icon\"\n        },\n        {\n            \"id\": \"64829e6b0bdcf800013c91da\",\n            \"name\": \"Service Request\",\n            \"url\": \"/Home/SentRequest\",\n            \"message\": \"JessicaSmith accepted your skill trade request.\",\n            \"isViewed\": true,\n            \"updatedOn\": \"2023-06-09T03:37:15.442Z\",\n            \"notificationType\": 0,\n            \"icon\": \"tasks icon\"\n        },\n        {\n            \"id\": \"64829e5d0bdcf800013c91d9\",\n            \"name\": \"Service Request\",\n            \"url\": \"/Home/SentRequest\",\n            \"message\": \"JessicaSmith accepted your skill trade request.\",\n            \"isViewed\": true,\n            \"updatedOn\": \"2023-06-09T03:37:01.28Z\",\n            \"notificationType\": 0,\n            \"icon\": \"tasks icon\"\n        },\n        {\n            \"id\": \"64829b420bdcf800013c91d8\",\n            \"name\": \"Service Request\",\n            \"url\": \"/Home/SentRequest\",\n            \"message\": \"JessicaSmith declined your skill trade request please contact back\",\n            \"isViewed\": true,\n            \"updatedOn\": \"2023-06-09T03:23:46.105Z\",\n            \"notificationType\": 0,\n            \"icon\": \"tasks icon\"\n        }\n    ],\n    \"totalCount\": 24\n}"
						}
					]
				},
				{
					"name": "Read All Notifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Read All Notifications\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"        });\r",
									"    }\r",
									"}\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Read All Notifications because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "http://localhost:60190/notification/notification/readAllNotifications"
					},
					"response": [
						{
							"name": "Positive Read All Notifications",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:60190/notification/notification/readAllNotifications"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 06:40:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "Read Marked Notifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Mark Notificatino as Read\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"        });\r",
									"    }\r",
									"}\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Mark Notification as Read because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"ids\": \"65260f69a044c900017ee735\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:60190/notification/notification/readMarkedNotifications"
					},
					"response": [
						{
							"name": "Positive Read Marked Notifications",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"ids\": \"65260f69a044c900017ee735\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/notification/notification/readMarkedNotifications"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 06:41:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true\n}"
						}
					]
				},
				{
					"name": "Remove Marked Notifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Remove Marked Notifications\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"        });\r",
									"    } else {\r",
									"        pm.test(\"Unable to Remove Marked Notifications\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.false;\r",
									"            pm.expect(response.message).to.exist;\r",
									"        });\r",
									"    }\r",
									"}\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Remove Marked Notification because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "ids",
									"value": "64911f7e35dd8500016de56b",
									"type": "text"
								}
							]
						},
						"url": "http://localhost:60190/notification/notification/removeMarkedNotifications"
					},
					"response": [
						{
							"name": "Positive Remove Marked Notifications",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "ids",
											"value": "64911f7e35dd8500016de56b",
											"type": "text"
										}
									]
								},
								"url": "http://localhost:60190/notification/notification/removeMarkedNotifications"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 06:43:46 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true\n}"
						},
						{
							"name": "Negative Remove Marked Notifications",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "ids",
											"value": "",
											"type": "text"
										}
									]
								},
								"url": "http://localhost:60190/notification/notification/removeMarkedNotifications"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 06:44:04 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Non-static method requires a target.\"\n}"
						},
						{
							"name": "Negative Remove Marked Notifications",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "ids",
											"value": "123",
											"type": "text"
										}
									]
								},
								"url": "http://localhost:60190/notification/notification/removeMarkedNotifications"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 26 Nov 2023 06:44:18 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"'123' is not a valid 24 digit hex string.\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Chat endpoints",
			"item": [
				{
					"name": "Get First Chatroom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Get First Chatroom\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response).to.have.keys('success', 'chatroom', 'myCurrentUser');\r",
									"        });\r",
									"    }\r",
									"}\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Get First Chatroom because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "http://localhost:60190/profile/profile/getFirstChatroom"
					},
					"response": [
						{
							"name": "Positive Get First Chatroom",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "http://localhost:60190/profile/profile/getFirstChatroom"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 24 Nov 2023 05:54:39 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"chatroom\": \"64239b8df0a1190001c5ad0d\",\n    \"myCurrentUser\": \"6421088c61454600016793fe\"\n}"
						}
					]
				},
				{
					"name": "Get Chat Room Details List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var statusCode = pm.response.code;\r",
									"\r",
									"if (statusCode == 200) {\r",
									"    var response = pm.response.json();\r",
									"    if (response.success == true) {\r",
									"        pm.test(\"Successfully Get Chat Room Details\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.true;\r",
									"            pm.expect(response.result).to.be.an('array');\r",
									"        });\r",
									"    } else {\r",
									"        pm.test(\"Get Chat Room details Unsuccessfull\", function () {\r",
									"            var response = pm.response.json();\r",
									"            pm.response.to.have.status(200);\r",
									"            pm.expect(response.success).to.be.false;\r",
									"            pm.expect(response.message).to.be.equal(\"Error while retrieving chatroom details\");\r",
									"        });\r",
									"    }\r",
									"}\r",
									"if (statusCode == 401) {\r",
									"     pm.test(\"Unable to Get Chat Room Details because user is not Authenticated\", function () {\r",
									"        var response = pm.response.body;\r",
									"        pm.expect(response).to.be.undefined\r",
									"    });\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{JWT}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"UserIdToList\": [\r\n    \"6421088c61454600016793fe\",\r\n    \"5c5f42f4bea4490005ebe9cd\"\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "http://localhost:60190/profile/profile/getChatRoomDetailsList/"
					},
					"response": [
						{
							"name": "Positive Empty List For Get Chat Room Details List",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"UserIdToList\": [\r\n\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/getChatRoomDetailsList/"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 24 Nov 2023 05:57:48 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": []\n}"
						},
						{
							"name": "Positive List not Empty for Get Chat Room Details List",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"UserIdToList\": [\r\n    \"6421088c61454600016793fe\",\r\n    \"5c5f42f4bea4490005ebe9cd\"\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/getChatRoomDetailsList/"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 24 Nov 2023 05:59:04 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"userIdToList\": null,\n            \"userIdTo\": \"6421088c61454600016793fe\",\n            \"userNameTo\": \"Saarah\",\n            \"userIdFrom\": null,\n            \"userNameFrom\": null,\n            \"profilePicUrl\": \"http://mars-user-profile.s3.amazonaws.com/1a1de2d8-f77d-4ff6-bb4e-52d14477ae82no-image.png\",\n            \"unreadMessages\": 0\n        },\n        {\n            \"userIdToList\": null,\n            \"userIdTo\": \"5c5f42f4bea4490005ebe9cd\",\n            \"userNameTo\": \"xxx\",\n            \"userIdFrom\": null,\n            \"userNameFrom\": null,\n            \"profilePicUrl\": \"http://mars-user-profile.s3.amazonaws.com/1a1de2d8-f77d-4ff6-bb4e-52d14477ae82no-image.png\",\n            \"unreadMessages\": 0\n        }\n    ]\n}"
						},
						{
							"name": "Negative Get Chat Room Details List",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "http://localhost:60190/profile/profile/getChatRoomDetailsList/"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 24 Nov 2023 05:59:24 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Error while retrieving chatroom details\"\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}